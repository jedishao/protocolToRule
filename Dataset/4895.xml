<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-4895: Beacon chain push withdrawals as operations</title>
<meta property="og:title" content="EIP-4895: Beacon chain push withdrawals as operations" />
<meta name="description" content="Support validator withdrawals from the beacon chain to the EVM via a new &quot;system-level&quot; operation type." />
<meta property="og:description" content="Support validator withdrawals from the beacon chain to the EVM via a new &quot;system-level&quot; operation type." />
<meta name="twitter:description" content="Support validator withdrawals from the beacon chain to the EVM via a new &quot;system-level&quot; operation type." />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-4895" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-4895" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="draft">
⚠️ This EIP is not recommended for general use or implementation as it is likely to change.
</div>
<div class="home">
<h1 class="page-heading">
EIP-4895: Beacon chain push withdrawals as operations
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4895.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3>Support validator withdrawals from the beacon chain to the EVM via a new &quot;system-level&quot; operation type.</h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/ralexstokes">Alex Stokes</a>, <a href="https://github.com/djrtwo">Danny Ryan</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/eip-4895-beacon-chain-withdrawals-as-system-level-operations/8568">https://ethereum-magicians.org/t/eip-4895-beacon-chain-withdrawals-as-system-level-operations/8568</a></td></tr>
<tr><th>Status</th><td>Draft
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>Core</td></tr>
<tr><th>Created</th><td>2022-03-10</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a>
<ul>
<li><a href="#system-level-operation-withdrawal">System-level operation: withdrawal</a></li>
<li><a href="#new-field-in-the-execution-block-withdrawals">New field in the execution block: withdrawals</a></li>
<li><a href="#commitment-to-withdrawals">Commitment to withdrawals</a></li>
<li><a href="#new-field-in-the-execution-block-header-withdrawals-root">New field in the execution block header: withdrawals root</a></li>
<li><a href="#block-validity">Block validity</a></li>
<li><a href="#state-transition">State transition</a></li>
</ul>
</li>
<li><a href="#rationale">Rationale</a>
<ul>
<li><a href="#why-not-a-new-transaction-type">Why not a new transaction type?</a></li>
<li><a href="#why-no-gas-costs-for-the-withdrawal-type">Why no (gas) costs for the withdrawal type?</a></li>
<li><a href="#why-only-balance-updates-no-general-evm-execution">Why only balance updates? No general EVM execution?</a></li>
</ul>
</li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>Introduce a system-level “operation” to support validator withdrawals that are “pushed” from the beacon chain to the EVM.</p>
<p>These operations effect unconditional balance increases to the specified recipients.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>This EIP provides a way for validator withdrawals made on the beacon chain to enter into the EVM.
The architecture is “push”-based, rather than “pull”-based, where withdrawals are required to be processed in the execution block as soon as they are dequeued from the beacon chain.</p>
<p>This approach is more involved than “pull”-based alternatives (e.g. <a href="/EIPS/eip-4788">EIP-4788</a> + user-space withdrawal contract) with respect to the core protocol (by providing a new object type – operation – with special semantics) but does provide tighter integration of a critical feature into the protocol itself.</p>
<p>Additionally, the withdrawals themselves are represented as a new type of object in the block – an “operation” – that keeps their concern separate from user-level transactions.
This approach is more involved than the prior <a href="/EIPS/eip-4863">EIP-4863</a> but it cleanly separates this “system-level” operation from regular transactions.
The separation simplifies testing (so facilitates security) by reducing interaction effects generated by mixing this system-level concern with user data.</p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<table>
<thead>
<tr>
<th>constants</th>
<th>value</th>
<th>units</th>
</tr>
</thead>
<tbody>
<tr>
 <td><code class="language-plaintext highlighter-rouge">FORK_TIMESTAMP</code></td>
<td>TBD</td>
<td> </td>
</tr>
</tbody>
</table>
<p>Beginning with the execution timestamp <code class="language-plaintext highlighter-rouge">FORK_TIMESTAMP</code>, execution clients <strong>MUST</strong> introduce the following extensions to block validation and processing:</p>
<h3 id="system-level-operation-withdrawal">
<a href="#system-level-operation-withdrawal" class="anchor-link"></a> System-level operation: withdrawal
</h3>
<p>Define a new block-level object called a <code class="language-plaintext highlighter-rouge">withdrawal</code> that describes withdrawals that have been validated at the consensus layer.
<code class="language-plaintext highlighter-rouge">Withdrawal</code>s are syntactically similar to a user-level transaction but live in a different domain than user-level transactions.</p>
<p><code class="language-plaintext highlighter-rouge">Withdrawal</code>s have three key pieces of information supplied from the consensus layer:</p>
<ol>
<li>a monotonically increasing <code class="language-plaintext highlighter-rouge">index</code> as a <code class="language-plaintext highlighter-rouge">uint64</code> value</li>
<li>a recipient for the withdrawn ether <code class="language-plaintext highlighter-rouge">address</code> as a 20-byte value</li>
<li>an <code class="language-plaintext highlighter-rouge">amount</code> of ether given in wei as a 256-bit value.</li>
</ol>
<p><code class="language-plaintext highlighter-rouge">Withdrawal</code> objects are serialized as a RLP list according to the schema: <code class="language-plaintext highlighter-rouge">[index, address, amount]</code>.</p>
<h3 id="new-field-in-the-execution-block-withdrawals">
<a href="#new-field-in-the-execution-block-withdrawals" class="anchor-link"></a> New field in the execution block: withdrawals
</h3>
<p>The execution block gains a new field referred to as <code class="language-plaintext highlighter-rouge">withdrawals</code> which is an RLP list of <code class="language-plaintext highlighter-rouge">Withdrawal</code> data.</p>
<p>For example:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">withdrawal_0</span> <span class="o">=</span> <span class="p">[</span><span class="n">index_0</span><span class="p">,</span> <span class="n">address_0</span><span class="p">,</span> <span class="n">amount_0</span><span class="p">]</span>
<span class="n">withdrawal_1</span> <span class="o">=</span> <span class="p">[</span><span class="n">index_1</span><span class="p">,</span> <span class="n">address_1</span><span class="p">,</span> <span class="n">amount_1</span><span class="p">]</span>
<span class="n">withdrawals</span> <span class="o">=</span> <span class="p">[</span><span class="n">withdrawal_0</span><span class="p">,</span> <span class="n">withdrawal_1</span><span class="p">]</span>
</code></pre></div></div>
<p>This new field is encoded after the existing fields in the block structure and is considered part of the block’s body.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">block_rlp</span> <span class="o">=</span> <span class="n">RLP</span><span class="p">([</span><span class="n">header</span><span class="p">,</span> <span class="n">transactions</span><span class="p">,</span> <span class="n">ommers</span><span class="p">,</span> <span class="n">withdrawals</span><span class="p">])</span>

<span class="n">block_body_rlp</span> <span class="o">=</span> <span class="n">RLP</span><span class="p">([</span><span class="n">transactions</span><span class="p">,</span> <span class="n">ommers</span><span class="p">,</span> <span class="n">withdrawals</span><span class="p">])</span>
</code></pre></div></div>
<p>NOTE: due to <a href="/EIPS/eip-3675">EIP-3675</a> the <code class="language-plaintext highlighter-rouge">ommers</code> value in this serialization is the RLP encoding of an empty list.</p>
<h3 id="commitment-to-withdrawals">
<a href="#commitment-to-withdrawals" class="anchor-link"></a> Commitment to withdrawals
</h3>
<p>The execution block header gains a new field committing to the <code class="language-plaintext highlighter-rouge">withdrawals</code> in the block.</p>
<p>This commitment is constructed identically to the transactions root in the existing block header by inserting each withdrawal into a Merkle-Patricia trie keyed by index in the list of <code class="language-plaintext highlighter-rouge">withdrawals</code>.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">compute_trie_root_from_indexed_data</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
    <span class="n">trie</span> <span class="o">=</span> <span class="n">Trie</span><span class="p">.</span><span class="k">from</span><span class="p">([(</span><span class="n">i</span><span class="p">,</span> <span class="n">obj</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">obj</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">data</span><span class="p">)])</span>
    <span class="k">return</span> <span class="n">trie</span><span class="p">.</span><span class="n">root</span>

<span class="n">block_header</span><span class="p">.</span><span class="n">withdrawals_root</span> <span class="o">=</span> <span class="n">compute_trie_root_from_indexed_data</span><span class="p">(</span><span class="n">block</span><span class="p">.</span><span class="n">withdrawals</span><span class="p">)</span>
</code></pre></div></div>
<h3 id="new-field-in-the-execution-block-header-withdrawals-root">
<a href="#new-field-in-the-execution-block-header-withdrawals-root" class="anchor-link"></a> New field in the execution block header: withdrawals root
</h3>
<p>The block header gains a new field containing the 32 byte root of the trie committing to the list of withdrawals provided in a given block (see <a href="#commitment-to-withdrawals">section on commitment</a>).</p>
<p>This new field, the <code class="language-plaintext highlighter-rouge">withdrawals_root</code>, is appended to the end of the existing list of fields in the block header.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">block_header_rlp</span> <span class="o">=</span> <span class="n">RLP</span><span class="p">([</span>
  <span class="n">parent_hash</span><span class="p">,</span>
  <span class="n">ommers_hash</span><span class="p">,</span>
  <span class="n">coinbase</span><span class="p">,</span>
  <span class="n">state_root</span><span class="p">,</span>
  <span class="n">txs_root</span><span class="p">,</span>
  <span class="n">receipts_root</span><span class="p">,</span>
  <span class="n">bloom</span><span class="p">,</span>
  <span class="n">difficulty</span><span class="p">,</span>
  <span class="n">number</span><span class="p">,</span>
  <span class="n">gas_limit</span><span class="p">,</span>
  <span class="n">gas_used</span><span class="p">,</span>
  <span class="n">time</span><span class="p">,</span>
  <span class="n">extradata</span><span class="p">,</span>
  <span class="n">mix_hash</span><span class="p">,</span>
  <span class="n">nonce</span><span class="p">,</span>
  <span class="n">withdrawals_root</span><span class="p">,</span>
<span class="p">])</span>
</code></pre></div></div>
<p>NOTE: refer to <a href="/EIPS/eip-3675">EIP-3675</a> as some of the values in the header RLP have fixed values that <strong>MUST</strong>* be used.</p>
<h3 id="block-validity">
<a href="#block-validity" class="anchor-link"></a> Block validity
</h3>
<p>Assuming the block is well-formatted, the execution client has an additional block validation to ensure that the <code class="language-plaintext highlighter-rouge">withdrawals_root</code> matches the expected value given the list present in the block.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">assert</span> <span class="n">block_header</span><span class="p">.</span><span class="n">withdrawals_root</span> <span class="o">==</span> <span class="n">compute_trie_root_from_indexed_data</span><span class="p">(</span><span class="n">block</span><span class="p">.</span><span class="n">withdrawals</span><span class="p">)</span>
</code></pre></div></div>
<h3 id="state-transition">
<a href="#state-transition" class="anchor-link"></a> State transition
</h3>
<p>The <code class="language-plaintext highlighter-rouge">withdrawals</code> in a block are processed <strong>after</strong> any user-level transactions are applied.</p>
<p>For each <code class="language-plaintext highlighter-rouge">withdrawal</code> in the list of <code class="language-plaintext highlighter-rouge">block.withdrawals</code>, the implementation should increase the balance of the <code class="language-plaintext highlighter-rouge">address</code> specified by the <code class="language-plaintext highlighter-rouge">amount</code> given.</p>
<p>This balance change is unconditional and <strong>MUST</strong> not fail.</p>
<p>This operation has no associated gas costs.</p>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<h3 id="why-not-a-new-transaction-type">
<a href="#why-not-a-new-transaction-type" class="anchor-link"></a> Why not a new transaction type?
</h3>
<p>This EIP suggests a new type of object – the “withdrawal operation” – as it has special semantics different from other existing types of EVM transactions.</p>
<p>Operations are initiated by the overall system, rather than originating from end users like typical transactions.</p>
<p>An entirely new type of object firewalls off generic EVM execution from this type of processing to simplify testing and security review of withdrawals.</p>
<h3 id="why-no-gas-costs-for-the-withdrawal-type">
<a href="#why-no-gas-costs-for-the-withdrawal-type" class="anchor-link"></a> Why no (gas) costs for the withdrawal type?
</h3>
<p>The maximum number of this operation that can reach the execution layer at a given time is bounded (enforced by the consensus layer) and this limit is kept small so that
any execution layer operational costs are negligible in the context of the broader block execution.</p>
<p>This bound applies to both computational cost (only a few balance updates in the state) and storage/networking cost as the additional block footprint is kept small (current parameterizations put the additional overhead at ~1% of current average block size).</p>
<h3 id="why-only-balance-updates-no-general-evm-execution">
<a href="#why-only-balance-updates-no-general-evm-execution" class="anchor-link"></a> Why only balance updates? No general EVM execution?
</h3>
<p>More general processing introduces the risk of failures, which complicates accounting on the beacon chain.</p>
<p>This EIP suggests a route for withdrawals that provides most of the benefits for a minimum of the (complexity) cost.</p>
<h2 id="backwards-compatibility">
<a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>No issues.</p>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security Considerations
</h2>
<p>Consensus-layer validation of withdrawal transactions is critical to ensure that the proper amount of ETH is withdrawn back into the execution layer.
This consensus-layer to execution-layer ETH transfer does not have a current analog in the EVM and thus deserves very high security scrutiny.</p>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/ralexstokes">Alex Stokes</a>, <a href="https://github.com/djrtwo">Danny Ryan</a>, "EIP-4895: Beacon chain push withdrawals as operations [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 4895, March 2022. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-4895.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-4895: Beacon chain push withdrawals as operations [DRAFT]",
    "author": "Alex Stokes (@ralexstokes), Danny Ryan (@djrtwo)",
    "name": "EIP-4895: Beacon chain push withdrawals as operations [DRAFT]",
    "dateCreated": "2022-03-10",
    "datePublished": "2022-03-10",

    "discussionUrl": "https://ethereum-magicians.org/t/eip-4895-beacon-chain-withdrawals-as-system-level-operations/8568",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2022"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
