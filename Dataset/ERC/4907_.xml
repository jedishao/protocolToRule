<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-4907: Rental NFT, an Extension of EIP-721</title>
<meta property="og:title" content="EIP-4907: Rental NFT, an Extension of EIP-721" />
<meta name="description" content="Add a time-limited role with restricted permissions to EIP-721 tokens." />
<meta property="og:description" content="Add a time-limited role with restricted permissions to EIP-721 tokens." />
<meta name="twitter:description" content="Add a time-limited role with restricted permissions to EIP-721 tokens." />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-4907" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-4907" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="home">
<h1 class="page-heading">
EIP-4907: Rental NFT, an Extension of EIP-721
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4907.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3>Add a time-limited role with restricted permissions to EIP-721 tokens.</h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/0xanders">Anders</a>, <a href="https://github.com/LanceSnow">Lance</a>, <a href="/cdn-cgi/l/email-protection#35465d4740527550585a5f5c51545a1b5a4752">Shrug</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/idea-erc-721-user-and-expires-extension/8572">https://ethereum-magicians.org/t/idea-erc-721-user-and-expires-extension/8572</a></td></tr>
<tr><th>Status</th><td>Final
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>ERC</td></tr>
<tr><th>Created</th><td>2022-03-11</td></tr>
<tr><th>Requires</th><td>
<a href="eip-165">165</a>,
<a href="eip-721">721</a>
</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a>
<ul>
<li><a href="#contract-interface">Contract Interface</a></li>
</ul>
</li>
<li><a href="#rationale">Rationale</a>
<ul>
<li><a href="#clear-rights-assignment">Clear Rights Assignment</a></li>
<li><a href="#simple-on-chain-time-management">Simple On-chain Time Management</a></li>
<li><a href="#easy-third-party-integration">Easy Third-Party Integration</a></li>
</ul>
</li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#test-cases">Test Cases</a>
<ul>
<li><a href="#test-contract">Test Contract</a></li>
<li><a href="#test-code">Test Code</a></li>
</ul>
</li>
<li><a href="#reference-implementation">Reference Implementation</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>This standard is an extension of <a href="/EIPS/eip-721">EIP-721</a>. It proposes an additional role (<code class="language-plaintext highlighter-rouge">user</code>) which can be granted to addresses, and a time where the role is automatically revoked (<code class="language-plaintext highlighter-rouge">expires</code>). The <code class="language-plaintext highlighter-rouge">user</code> role represents permission to “use” the NFT, but not the ability to transfer it or set users.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>Some NFTs have certain utilities. For example, virtual land can be “used” to build scenes, and NFTs representing game assets can be “used” in-game. In some cases, the owner and user may not always be the same. There may be an owner of the NFT that rents it out to a “user”. The actions that a “user” should be able to take with an NFT would be different from the “owner” (for instance, “users” usually shouldn’t be able to sell ownership of the NFT).  In these situations, it makes sense to have separate roles that identify whether an address represents an “owner” or a “user” and manage permissions to perform actions accordingly.</p>
<p>Some projects already use this design scheme under different names such as “operator” or “controller” but as it becomes more and more prevalent, we need a unified standard to facilitate collaboration amongst all applications.</p>
<p>Furthermore, applications of this model (such as renting) often demand that user addresses have only temporary access to using the NFT. Normally, this means the owner needs to submit two on-chain transactions, one to list a new address as the new user role at the start of the duration and one to reclaim the user role at the end. This is inefficient in both labor and gas and so an “expires” function is introduced that would facilitate the automatic end of a usage term without the need of a second transaction.</p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<p>The keywords “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY” and “OPTIONAL” in this document are to be interpreted as described in RFC 2119.</p>
<h3 id="contract-interface">
<a href="#contract-interface" class="anchor-link"></a> Contract Interface
</h3>
<p>Solidity Interface with NatSpec &amp; OpenZeppelin v4 Interfaces (also available at <a href="/assets/eip-4907/contracts/IERC4907.sol"><code class="language-plaintext highlighter-rouge">IERC4907.sol</code></a>):</p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="n">IERC4907</span> <span class="p">{</span>

    <span class="c1">// Logged when the user of an NFT is changed or expires is changed
</span>    <span class="c1">/// @notice Emitted when the `user` of an NFT or the `expires` of the `user` is changed
</span>    <span class="c1">/// The zero address for user indicates that there is no user address
</span>    <span class="k">event</span> <span class="n">UpdateUser</span><span class="p">(</span><span class="kt">uint256</span> <span class="k">indexed</span> <span class="n">tokenId</span><span class="p">,</span> <span class="kt">address</span> <span class="k">indexed</span> <span class="n">user</span><span class="p">,</span> <span class="kt">uint64</span> <span class="n">expires</span><span class="p">);</span>

    <span class="c1">/// @notice set the user and expires of an NFT
</span>    <span class="c1">/// @dev The zero address indicates there is no user
</span>    <span class="c1">/// Throws if `tokenId` is not valid NFT
</span>    <span class="c1">/// @param user  The new user of the NFT
</span>    <span class="c1">/// @param expires  UNIX timestamp, The new user could use the NFT before expires
</span>    <span class="k">function</span> <span class="n">setUser</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">tokenId</span><span class="p">,</span> <span class="kt">address</span> <span class="n">user</span><span class="p">,</span> <span class="kt">uint64</span> <span class="n">expires</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">/// @notice Get the user address of an NFT
</span>    <span class="c1">/// @dev The zero address indicates that there is no user or the user is expired
</span>    <span class="c1">/// @param tokenId The NFT to get the user address for
</span>    <span class="c1">/// @return The user address for this NFT
</span>    <span class="k">function</span> <span class="n">userOf</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">tokenId</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span><span class="p">(</span><span class="kt">address</span><span class="p">);</span>

    <span class="c1">/// @notice Get the user expires of an NFT
</span>    <span class="c1">/// @dev The zero value indicates that there is no user
</span>    <span class="c1">/// @param tokenId The NFT to get the user expires for
</span>    <span class="c1">/// @return The user expires for this NFT
</span>    <span class="k">function</span> <span class="n">userExpires</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">tokenId</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span><span class="p">(</span><span class="kt">uint256</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<p>The <code class="language-plaintext highlighter-rouge">userOf(uint256 tokenId)</code> function MAY be implemented as <code class="language-plaintext highlighter-rouge">pure</code> or <code class="language-plaintext highlighter-rouge">view</code>.</p>
<p>The <code class="language-plaintext highlighter-rouge">userExpires(uint256 tokenId)</code> function MAY be implemented as <code class="language-plaintext highlighter-rouge">pure</code> or <code class="language-plaintext highlighter-rouge">view</code>.</p>
<p>The <code class="language-plaintext highlighter-rouge">setUser(uint256 tokenId, address user, uint64 expires)</code> function MAY be implemented as <code class="language-plaintext highlighter-rouge">public</code> or <code class="language-plaintext highlighter-rouge">external</code>.</p>
<p>The <code class="language-plaintext highlighter-rouge">UpdateUser</code> event MUST be emitted when a user address is changed or the user expires is changed.</p>
<p>The <code class="language-plaintext highlighter-rouge">supportsInterface</code> method MUST return <code class="language-plaintext highlighter-rouge">true</code> when called with <code class="language-plaintext highlighter-rouge">0xad092b5c</code>.</p>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<p>This model is intended to facilitate easy implementation. Here are some of the problems that are solved by this standard:</p>
<h3 id="clear-rights-assignment">
<a href="#clear-rights-assignment" class="anchor-link"></a> Clear Rights Assignment
</h3>
<p>With Dual “owner” and “user” roles, it becomes significantly easier to manage what lenders and borrowers can and cannot do with the NFT (in other words, their rights). Additionally, owners can control who the user is and it’s easy for other projects to assign their own rights to either the owners or the users.</p>
<h3 id="simple-on-chain-time-management">
<a href="#simple-on-chain-time-management" class="anchor-link"></a> Simple On-chain Time Management
</h3>
<p>Once a rental period is over, the user role needs to be reset and the “user” has to lose access to the right to use the NFT. This is usually accomplished with a second on-chain transaction but that is gas inefficient and can lead to complications because it’s imprecise. With the <code class="language-plaintext highlighter-rouge">expires</code> function, there is no need for another transaction because the “user” is invalidated automatically after the duration is over.</p>
<h3 id="easy-third-party-integration">
<a href="#easy-third-party-integration" class="anchor-link"></a> Easy Third-Party Integration
</h3>
<p>In the spirit of permission less interoperability, this standard makes it easier for third-party protocols to manage NFT usage rights without permission from the NFT issuer or the NFT application. Once a project has adopted the additional <code class="language-plaintext highlighter-rouge">user</code> role and <code class="language-plaintext highlighter-rouge">expires</code>, any other project can directly interact with these features and implement their own type of transaction. For example, a PFP NFT using this standard can be integrated into both a rental platform where users can rent the NFT for 30 days AND, at the same time, a mortgage platform where users can use the NFT while eventually buying ownership of the NFT with installment payments. This would all be done without needing the permission of the original PFP project.</p>
<h2 id="backwards-compatibility">
<a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>As mentioned in the specifications section, this standard can be fully EIP-721 compatible by adding an extension function set.</p>
<p>In addition, new functions introduced in this standard have many similarities with the existing functions in EIP-721. This allows developers to easily adopt the standard quickly.</p>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<h3 id="test-contract">
<a href="#test-contract" class="anchor-link"></a> Test Contract
</h3>
<p><code class="language-plaintext highlighter-rouge">ERC4907Demo</code> Implementation: <a href="/assets/eip-4907/contracts/ERC4907Demo.sol"><code class="language-plaintext highlighter-rouge">ERC4907Demo.sol</code></a></p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// SPDX-License-Identifier: CC0-1.0
</span><span class="k">pragma</span> <span class="n">solidity</span> <span class="o">^</span><span class="mf">0.8</span><span class="p">.</span><span class="mi">0</span><span class="p">;</span>

<span class="k">import</span> <span class="s">"./ERC4907.sol"</span><span class="p">;</span>

<span class="k">contract</span> <span class="n">ERC4907Demo</span> <span class="k">is</span> <span class="n">ERC4907</span> <span class="p">{</span>

    <span class="k">constructor</span><span class="p">(</span><span class="kt">string</span> <span class="k">memory</span> <span class="n">name</span><span class="p">,</span> <span class="kt">string</span> <span class="k">memory</span> <span class="n">symbol</span><span class="p">)</span>
     <span class="n">ERC4907</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="n">symbol</span><span class="p">)</span>
     <span class="p">{</span>         
     <span class="p">}</span>

    <span class="k">function</span> <span class="n">mint</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">tokenId</span><span class="p">,</span> <span class="kt">address</span> <span class="n">to</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
        <span class="n">_mint</span><span class="p">(</span><span class="n">to</span><span class="p">,</span> <span class="n">tokenId</span><span class="p">);</span>
    <span class="p">}</span>

<span class="p">}</span>
</code></pre></div></div>
<h3 id="test-code">
<a href="#test-code" class="anchor-link"></a> Test Code
</h3>
<p><a href="/assets/eip-4907/test/test.js">test.js</a></p>
<pre><code class="language-JavaScript">const { assert } = require("chai");

const ERC4907Demo = artifacts.require("ERC4907Demo");

contract("test", async accounts =&gt; {

    it("should set user to Bob", async () =&gt; {
        // Get initial balances of first and second account.
        const Alice = accounts[0];
        const Bob = accounts[1];

        const instance = await ERC4907Demo.deployed("T", "T");
        const demo = instance;

        await demo.mint(1, Alice);
        let expires = Math.floor(new Date().getTime()/1000) + 1000;
        await demo.setUser(1, Bob, BigInt(expires));

        let user_1 = await demo.userOf(1);

        assert.equal(
            user_1,
            Bob,
            "User of NFT 1 should be Bob"
        );

        let owner_1 = await demo.ownerOf(1);
        assert.equal(
            owner_1,
            Alice ,
            "Owner of NFT 1 should be Alice"
        );
    });
});


</code></pre>
<p>run in Terminal：</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>truffle test ./test/test.js
</code></pre></div></div>
<h2 id="reference-implementation">
<a href="#reference-implementation" class="anchor-link"></a> Reference Implementation
</h2>
<p>Implementation: <a href="/assets/eip-4907/contracts/ERC4907.sol"><code class="language-plaintext highlighter-rouge">ERC4907.sol</code></a></p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// SPDX-License-Identifier: CC0-1.0
</span><span class="k">pragma</span> <span class="n">solidity</span> <span class="o">^</span><span class="mf">0.8</span><span class="p">.</span><span class="mi">0</span><span class="p">;</span>

<span class="k">import</span> <span class="s">"@openzeppelin/contracts/token/ERC721/ERC721.sol"</span><span class="p">;</span>
<span class="k">import</span> <span class="s">"./IERC4907.sol"</span><span class="p">;</span>

<span class="k">contract</span> <span class="n">ERC4907</span> <span class="k">is</span> <span class="n">ERC721</span><span class="p">,</span> <span class="n">IERC4907</span> <span class="p">{</span>
    <span class="k">struct</span> <span class="n">UserInfo</span> 
    <span class="p">{</span>
        <span class="kt">address</span> <span class="n">user</span><span class="p">;</span>   <span class="c1">// address of user role
</span>        <span class="kt">uint64</span> <span class="n">expires</span><span class="p">;</span> <span class="c1">// unix timestamp, user expires
</span>    <span class="p">}</span>

    <span class="k">mapping</span> <span class="p">(</span><span class="kt">uint256</span>  <span class="o">=&gt;</span> <span class="n">UserInfo</span><span class="p">)</span> <span class="k">internal</span> <span class="n">_users</span><span class="p">;</span>

    <span class="k">constructor</span><span class="p">(</span><span class="kt">string</span> <span class="k">memory</span> <span class="n">name_</span><span class="p">,</span> <span class="kt">string</span> <span class="k">memory</span> <span class="n">symbol_</span><span class="p">)</span>
     <span class="n">ERC721</span><span class="p">(</span><span class="n">name_</span><span class="p">,</span> <span class="n">symbol_</span><span class="p">)</span>
     <span class="p">{</span>
     <span class="p">}</span>
    
    <span class="c1">/// @notice set the user and expires of an NFT
</span>    <span class="c1">/// @dev The zero address indicates there is no user
</span>    <span class="c1">/// Throws if `tokenId` is not valid NFT
</span>    <span class="c1">/// @param user  The new user of the NFT
</span>    <span class="c1">/// @param expires  UNIX timestamp, The new user could use the NFT before expires
</span>    <span class="k">function</span> <span class="n">setUser</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">tokenId</span><span class="p">,</span> <span class="kt">address</span> <span class="n">user</span><span class="p">,</span> <span class="kt">uint64</span> <span class="n">expires</span><span class="p">)</span> <span class="k">public</span> <span class="k">virtual</span><span class="p">{</span>
        <span class="nb">require</span><span class="p">(</span><span class="n">_isApprovedOrOwner</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">sender</span><span class="p">,</span> <span class="n">tokenId</span><span class="p">),</span> <span class="s">"ERC4907: transfer caller is not owner nor approved"</span><span class="p">);</span>
        <span class="n">UserInfo</span> <span class="k">storage</span> <span class="n">info</span> <span class="o">=</span>  <span class="n">_users</span><span class="p">[</span><span class="n">tokenId</span><span class="p">];</span>
        <span class="n">info</span><span class="p">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">user</span><span class="p">;</span>
        <span class="n">info</span><span class="p">.</span><span class="n">expires</span> <span class="o">=</span> <span class="n">expires</span><span class="p">;</span>
        <span class="k">emit</span> <span class="n">UpdateUser</span><span class="p">(</span><span class="n">tokenId</span><span class="p">,</span> <span class="n">user</span><span class="p">,</span> <span class="n">expires</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">/// @notice Get the user address of an NFT
</span>    <span class="c1">/// @dev The zero address indicates that there is no user or the user is expired
</span>    <span class="c1">/// @param tokenId The NFT to get the user address for
</span>    <span class="c1">/// @return The user address for this NFT
</span>    <span class="k">function</span> <span class="n">userOf</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">tokenId</span><span class="p">)</span> <span class="k">public</span> <span class="k">view</span> <span class="k">virtual</span> <span class="k">returns</span><span class="p">(</span><span class="kt">address</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span> <span class="kt">uint256</span><span class="p">(</span><span class="n">_users</span><span class="p">[</span><span class="n">tokenId</span><span class="p">].</span><span class="n">expires</span><span class="p">)</span> <span class="o">&gt;=</span>  <span class="n">block</span><span class="p">.</span><span class="n">timestamp</span><span class="p">){</span>
            <span class="k">return</span>  <span class="n">_users</span><span class="p">[</span><span class="n">tokenId</span><span class="p">].</span><span class="n">user</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span><span class="p">{</span>
            <span class="k">return</span> <span class="kt">address</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">/// @notice Get the user expires of an NFT
</span>    <span class="c1">/// @dev The zero value indicates that there is no user
</span>    <span class="c1">/// @param tokenId The NFT to get the user expires for
</span>    <span class="c1">/// @return The user expires for this NFT
</span>    <span class="k">function</span> <span class="n">userExpires</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">tokenId</span><span class="p">)</span> <span class="k">public</span> <span class="k">view</span> <span class="k">virtual</span> <span class="k">returns</span><span class="p">(</span><span class="kt">uint256</span><span class="p">){</span>
        <span class="k">return</span> <span class="n">_users</span><span class="p">[</span><span class="n">tokenId</span><span class="p">].</span><span class="n">expires</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">/// @dev See {IERC165-supportsInterface}.
</span>    <span class="k">function</span> <span class="n">supportsInterface</span><span class="p">(</span><span class="kt">bytes4</span> <span class="n">interfaceId</span><span class="p">)</span> <span class="k">public</span> <span class="k">view</span> <span class="k">virtual</span> <span class="k">override</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">interfaceId</span> <span class="o">==</span> <span class="k">type</span><span class="p">(</span><span class="n">IERC4907</span><span class="p">).</span><span class="n">interfaceId</span> <span class="o">||</span> <span class="nb">super</span><span class="p">.</span><span class="n">supportsInterface</span><span class="p">(</span><span class="n">interfaceId</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">function</span> <span class="n">_beforeTokenTransfer</span><span class="p">(</span>
        <span class="kt">address</span> <span class="n">from</span><span class="p">,</span>
        <span class="kt">address</span> <span class="n">to</span><span class="p">,</span>
        <span class="kt">uint256</span> <span class="n">tokenId</span>
    <span class="p">)</span> <span class="k">internal</span> <span class="k">virtual</span> <span class="k">override</span><span class="p">{</span>
        <span class="nb">super</span><span class="p">.</span><span class="n">_beforeTokenTransfer</span><span class="p">(</span><span class="n">from</span><span class="p">,</span> <span class="n">to</span><span class="p">,</span> <span class="n">tokenId</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">from</span> <span class="o">!=</span> <span class="n">to</span> <span class="o">&amp;&amp;</span> <span class="n">_users</span><span class="p">[</span><span class="n">tokenId</span><span class="p">].</span><span class="n">user</span> <span class="o">!=</span> <span class="kt">address</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">delete</span> <span class="n">_users</span><span class="p">[</span><span class="n">tokenId</span><span class="p">];</span>
            <span class="k">emit</span> <span class="n">UpdateUser</span><span class="p">(</span><span class="n">tokenId</span><span class="p">,</span> <span class="kt">address</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="mi">0</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span> 
</code></pre></div></div>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security Considerations
</h2>
<p>This EIP standard can completely protect the rights of the owner, the owner can change the NFT user and expires at any time.</p>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/0xanders">Anders</a>, <a href="https://github.com/LanceSnow">Lance</a>, <a href="/cdn-cgi/l/email-protection#8efde6fcfbe9ceebe3e1e4e7eaefe1a0e1fce9">Shrug</a>, "EIP-4907: Rental NFT, an Extension of EIP-721," <em>Ethereum Improvement Proposals</em>, no. 4907, March 2022. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-4907.</p>
</div>
<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-4907: Rental NFT, an Extension of EIP-721",
    "author": "Anders (@0xanders), Lance (@LanceSnow), Shrug <shrug@emojidao.org>",
    "name": "EIP-4907: Rental NFT, an Extension of EIP-721",
    "dateCreated": "2022-03-11",
    "datePublished": "2022-03-11",

    "discussionUrl": "https://ethereum-magicians.org/t/idea-erc-721-user-and-expires-extension/8572",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2022"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
