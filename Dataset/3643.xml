<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-3643: T-REX - Token for Regulated EXchanges</title>
<meta property="og:title" content="EIP-3643: T-REX - Token for Regulated EXchanges" />
<meta name="description" content="An institutional grade security token standard that provides interfaces for the management and compliant transfer of security tokens." />
<meta property="og:description" content="An institutional grade security token standard that provides interfaces for the management and compliant transfer of security tokens." />
<meta name="twitter:description" content="An institutional grade security token standard that provides interfaces for the management and compliant transfer of security tokens." />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-3643" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-3643" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="stagnant">
🚧 This EIP had no activity for at least 6 months.
</div>
<div class="home">
<h1 class="page-heading">
EIP-3643: T-REX - Token for Regulated EXchanges
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3643.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3>An institutional grade security token standard that provides interfaces for the management and compliant transfer of security tokens.</h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/Joachim-Lebrun">Joachim Lebrun</a>, <a href="https://github.com/TonyMalghem">Tony Malghem</a>, <a href="https://github.com/Nakasar">Kevin Thizy</a>, <a href="https://github.com/lfalempin">Luc Falempin</a>, <a href="https://github.com/Aboudjem">Adam Boudjemaa</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/eip-3643-proposition-of-the-t-rex-token-standard-for-securities/6844">https://ethereum-magicians.org/t/eip-3643-proposition-of-the-t-rex-token-standard-for-securities/6844</a></td></tr>
<tr><th>Status</th><td>Stagnant
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>ERC</td></tr>
<tr><th>Created</th><td>2021-07-09</td></tr>
<tr><th>Requires</th><td>
<a href="eip-20">20</a>,
<a href="eip-1822">1822</a>
</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#simple-summary">Simple Summary</a></li>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#rationale">Rationale</a>
<ul>
<li><a href="#transfer-restrictions">Transfer Restrictions</a></li>
<li><a href="#upgradeability">Upgradeability</a></li>
<li><a href="#identity-management">Identity Management</a></li>
</ul>
</li>
<li><a href="#specification">Specification</a>
<ul>
<li><a href="#main-functions">Main functions</a></li>
<li><a href="#token-interface">Token interface</a></li>
<li><a href="#identity-registry-interface">Identity Registry Interface</a></li>
<li><a href="#identity-registry-storage-interface">Identity Registry Storage Interface</a></li>
<li><a href="#compliance-interface">Compliance Interface</a></li>
<li><a href="#trusted-issuers-registry-interface">Trusted Issuer’s Registry Interface</a></li>
<li><a href="#claim-topics-registry-interface">Claim Topics Registry Interface</a></li>
</ul>
</li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="simple-summary">
<a href="#simple-summary" class="anchor-link"></a> Simple Summary
</h2>
<p>The T-REX token is
This standard</p>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>Standards should be backwards compatible with <a href="/EIPS/eip-20">ERC-20</a> and should be able to interact with <a href="https://github.com/ethereum/EIPs/issues/735">ERC-735</a> to validate the claims linked to an <a href="https://github.com/onchain-id/solidity"><code class="language-plaintext highlighter-rouge">ONCHAINID</code></a>, based on <a href="https://github.com/ethereum/EIPs/issues/734">ERC-734</a> and ERC-735.
The standard defines several interfaces that are described hereunder:</p>
<ul>
<li>Token</li>
<li>Identity Registry</li>
<li>Identity Registry Storage</li>
<li>Compliance</li>
<li>Trusted Issuers Registry</li>
<li>Claim Topics Registry</li>
</ul>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>Give standard interfaces for security tokens issued on Ethereum, through which any third party could interact with the security token.
The functions described by these interfaces vary and allow the appropriate users to call a range of different actions, such as forced transfers, freeze tokens (partially or totally on a wallet or even freeze the entire token), minting, burning, recover lost tokens (if an investor loses access to his wallet), etc.</p>
<p>The following requirements have been compiled following discussions with parties across financial institutions that are looking to issue securities on a DLT infrastructure such as ethereum.</p>
<ul>
<li><strong>MUST</strong> be <a href="/EIPS/eip-20">ERC-20</a> compatible.</li>
<li><strong>MUST</strong> be used in combination with an Identification system onchain (<a href="https://github.com/onchain-id/solidity">ONCHAINID</a>)</li>
<li><strong>MUST</strong> be able to apply any rule of compliance that is required by the regulator or by the token issuer (about the factors of eligibility of an identity or about the rules of the token itself)</li>
<li><strong>MUST</strong> have a standard interface to pre-check if a transfer is going to pass or fail before sending it to the blockchain</li>
<li><strong>MUST</strong> have a recovery system in case an investor loses access to his private key</li>
<li><strong>MUST</strong> be able to freeze tokens on the wallet of investors if needed, partially or totally</li>
<li><strong>MUST</strong> have the possibility to pause the token</li>
<li><strong>MUST</strong> be able to mint and burn tokens</li>
<li><strong>MUST</strong> define an Agent role and an Owner (token issuer) role</li>
<li><strong>MUST</strong> be able to force transfers from an Agent wallet</li>
<li><strong>MUST</strong> be able to issue transactions in batch (to save gas and to have all the transactions performed in the same block)</li>
<li><strong>MUST</strong> be upgradeable (code of the smart contract should be upgradeable without changing the token smart contract address)</li>
</ul>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<h3 id="transfer-restrictions">
<a href="#transfer-restrictions" class="anchor-link"></a> Transfer Restrictions
</h3>
<p>Transfers of securities can fail for a variety of reasons. This is in direct contrast to utility tokens, of which generally only require the sender to have a sufficient balance.
These conditions can be related to the status of an investor’s wallet, the identity of the sender and receiver of the securities (i.e. whether they
have been through a KYC process, whether they are accredited or an affiliate of the issuer) or for reasons unrelated to the specific transfer but instead set at
the token level (i.e. the token contract enforces a maximum number of investors or a cap on the percentage held by any single investor).
For <a href="/EIPS/eip-20">ERC-20</a> tokens, the <code class="language-plaintext highlighter-rouge">balanceOf</code> and <code class="language-plaintext highlighter-rouge">allowance</code> functions provide a way to check that a transfer is likely to succeed before executing the transfer, which can be
executed both on-chain and off-chain.
For tokens representing securities, the T-REX standard introduces a function <code class="language-plaintext highlighter-rouge">canTransfer</code> which provides a more general purpose way to achieve this. I.e. when the reasons for
failure are related to the compliance rules of the token and a function <code class="language-plaintext highlighter-rouge">isVerified</code> which allows to check the eligibility status of the identity of the investor.</p>
<h3 id="upgradeability">
<a href="#upgradeability" class="anchor-link"></a> Upgradeability
</h3>
<p>The token contract should be upgradeable without changing its address on the blockchain, therefore, we decided to make it <code class="language-plaintext highlighter-rouge">proxiable</code> through <a href="/EIPS/eip-1822">ERC-1822</a> (Universal Upgradeable Proxy Standard)</p>
<h3 id="identity-management">
<a href="#identity-management" class="anchor-link"></a> Identity Management
</h3>
<p>Security and compliance of transfers is issued through the management of onchain identities.</p>
<ul>
<li>ONCHAINID</li>
<li>Claim</li>
<li>Identity Storage/registry
Transfers of securities can fail for a variety of reasons in contrast to utility tokens which generally only require the sender to have a sufficient balance.</li>
</ul>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<p>This standard is backwards compatible with <a href="/EIPS/eip-20">ERC-20</a>, therefore, all ERC-20 functions can be called on an ERC-3643 token, the interfaces being compatible.
But the functions are not implemented in the same way as a classic ERC-20 as ERC-3643 is a permissioned token, which implies a check to be performed on each single
token transfer to validate the compliance of the transfer and the eligibility of the stakeholder’s identities.</p>
<h3 id="main-functions">
<a href="#main-functions" class="anchor-link"></a> Main functions
</h3>
<h4 id="transfer">
<a href="#transfer" class="anchor-link"></a> Transfer
</h4>
<p>To be able to perform a transfer on T-REX you need to fulfill several conditions :</p>
<ul>
<li>The sender needs to hold enough free balance (total balance - frozen tokens, if any)</li>
<li>The receiver needs to be whitelisted on the Identity Registry and verified (hold the necessary claims on his <a href="https://github.com/onchain-id/solidity">ONCHAINID</a>)</li>
<li>The sender’s wallet cannot be frozen</li>
<li>The receiver’s wallet cannot be frozen</li>
<li>The transfer has to respect all the rules of compliance defined in the <code class="language-plaintext highlighter-rouge">Compliance</code> smart contract (<code class="language-plaintext highlighter-rouge">canTransfer</code> needs to return <code class="language-plaintext highlighter-rouge">TRUE</code>)</li>
</ul>
<p>Here is an example of <code class="language-plaintext highlighter-rouge">transfer</code> function implementation :</p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="nb">transfer</span><span class="p">(</span><span class="kt">address</span> <span class="n">_to</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">public</span> <span class="k">override</span> <span class="n">whenNotPaused</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
        <span class="nb">require</span><span class="p">(</span><span class="o">!</span><span class="n">frozen</span><span class="p">[</span><span class="n">_to</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">frozen</span><span class="p">[</span><span class="n">msg</span><span class="p">.</span><span class="n">sender</span><span class="p">],</span> <span class="s">'wallet is frozen'</span><span class="p">);</span>
        <span class="nb">require</span><span class="p">(</span><span class="n">_amount</span> <span class="o">&lt;=</span> <span class="n">balanceOf</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">sender</span><span class="p">).</span><span class="n">sub</span><span class="p">(</span><span class="n">frozenTokens</span><span class="p">[</span><span class="n">msg</span><span class="p">.</span><span class="n">sender</span><span class="p">]),</span> <span class="s">'Insufficient Balance'</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">tokenIdentityRegistry</span><span class="p">.</span><span class="n">isVerified</span><span class="p">(</span><span class="n">_to</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">tokenCompliance</span><span class="p">.</span><span class="n">canTransfer</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">sender</span><span class="p">,</span> <span class="n">_to</span><span class="p">,</span> <span class="n">_amount</span><span class="p">))</span> <span class="p">{</span>
            <span class="n">tokenCompliance</span><span class="p">.</span><span class="n">transferred</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">sender</span><span class="p">,</span> <span class="n">_to</span><span class="p">,</span> <span class="n">_amount</span><span class="p">);</span>
            <span class="n">_transfer</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">sender</span><span class="p">,</span> <span class="n">_to</span><span class="p">,</span> <span class="n">_amount</span><span class="p">);</span>
            <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nb">revert</span><span class="p">(</span><span class="s">'Transfer not possible'</span><span class="p">);</span>
    <span class="p">}</span>
</code></pre></div></div>
<p>The <code class="language-plaintext highlighter-rouge">transferFrom</code> function works the same way while the <code class="language-plaintext highlighter-rouge">mint</code> function and the <code class="language-plaintext highlighter-rouge">forcedTransfer</code> function only require the receiver to be whitelisted and verified on the Identity Registry (they bypass the compliance rules). The <code class="language-plaintext highlighter-rouge">burn</code> function bypasses all checks on eligibility.</p>
<h4 id="isverified">
<a href="#isverified" class="anchor-link"></a> isVerified
</h4>
<p>The <code class="language-plaintext highlighter-rouge">isVerified</code> function is called from within the transfer functions <code class="language-plaintext highlighter-rouge">transfer</code>, <code class="language-plaintext highlighter-rouge">transferFrom</code>, <code class="language-plaintext highlighter-rouge">mint</code> and <code class="language-plaintext highlighter-rouge">forcedTransfer</code> to instruct the <code class="language-plaintext highlighter-rouge">Identity Registry</code> to check if the receiver is a valid investor, i.e. if his wallet address is in the <code class="language-plaintext highlighter-rouge">Identity Registry</code> of the token, and if the <code class="language-plaintext highlighter-rouge">ONCHAINID</code>contract linked to his wallet contains the claims (see ERC-735) required in the <code class="language-plaintext highlighter-rouge">Claim Topics Registry</code> and if these claims are signed by an authorized Claim Issuer as required in the <code class="language-plaintext highlighter-rouge">Trusted Issuers Registry</code>.
If all the requirements are fulfilled, the <code class="language-plaintext highlighter-rouge">isVerified</code> function returns <code class="language-plaintext highlighter-rouge">TRUE</code>, otherwise it returns <code class="language-plaintext highlighter-rouge">FALSE</code>. An implementation of this function can be found on the <a href="https://github.com/TokenySolutions/T-REX">T-REX repository</a>.</p>
<h4 id="cantransfer">
<a href="#cantransfer" class="anchor-link"></a> canTransfer
</h4>
<p>The <code class="language-plaintext highlighter-rouge">canTransfer</code> function is also called from within transfer functions. This function checks if the transfer is compliant with global compliance rules applied to the token, in opposition with <code class="language-plaintext highlighter-rouge">isVerified</code> that only checks the eligibility of an investor to hold and receive tokens, the <code class="language-plaintext highlighter-rouge">canTransfer</code> function is looking at global compliance rules, e.g. check if the transfer is compliant in the case there is a fixed maximum number of token holders to respect (can be a limited number of holders per country as well), check if the transfer respects rules setting a maximum amount of tokens per investor, …
If all the requirements are fulfilled, the <code class="language-plaintext highlighter-rouge">canTransfer</code> function will return <code class="language-plaintext highlighter-rouge">TRUE</code> otherwise it will return <code class="language-plaintext highlighter-rouge">FALSE</code> and the transfer will not be allowed to happen. An implementation of this function can be found on the <a href="https://github.com/TokenySolutions/T-REX">T-REX repository</a>.</p>
<h4 id="other-functions">
<a href="#other-functions" class="anchor-link"></a> Other functions
</h4>
<p>Description of other functions of the ERC-3643 can be found in the <code class="language-plaintext highlighter-rouge">interfaces</code> folder. An implementation of the ERC-3643 suite of smart contracts can be found on the <a href="https://github.com/TokenySolutions/T-REX">T-REX repository</a>.</p>
<h3 id="token-interface">
<a href="#token-interface" class="anchor-link"></a> Token interface
</h3>
<p>ERC-3643 permissioned tokens are based on a standard ERC-20 structure but with some functions being added in order to ensure compliance in the transactions of the security tokens. The functions <code class="language-plaintext highlighter-rouge">transfer</code> and <code class="language-plaintext highlighter-rouge">transferFrom</code> are implemented in a conditional way, allowing them to proceed with a transfer only IF the transaction is valid. The permissioned tokens are allowed to be transferred only to validated counterparties, in order to avoid tokens being held in wallets/ONCHAINIDs of ineligible/unauthorized investors. The ERC-3643 standard also supports the recovery of security tokens in case an investor loses his/her wallet private key. A history of recovered tokens is maintained on the blockchain for transparency reasons. ERC-3643 tokens are implementing a lot of additional functions to give the owner or his agent the possibility to manage supply, transfer rules, lockups and everything that could be required in the management of a security.
A detailed description of the functions can be found in the <a href="https://github.com/TokenySolutions/EIP3643/tree/main/interfaces">interfaces folder</a>.</p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="n">IERC3643</span> <span class="k">is</span> <span class="n">IERC20</span> <span class="p">{</span>

   <span class="c1">// events
</span>    <span class="k">event</span> <span class="n">UpdatedTokenInformation</span><span class="p">(</span><span class="kt">string</span> <span class="n">_newName</span><span class="p">,</span> <span class="kt">string</span> <span class="n">_newSymbol</span><span class="p">,</span> <span class="kt">uint8</span> <span class="n">_newDecimals</span><span class="p">,</span> <span class="kt">string</span> <span class="n">_newVersion</span><span class="p">,</span> <span class="kt">address</span> <span class="n">_newOnchainID</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityRegistryAdded</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">_identityRegistry</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">ComplianceAdded</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">_compliance</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">RecoverySuccess</span><span class="p">(</span><span class="kt">address</span> <span class="n">_lostWallet</span><span class="p">,</span> <span class="kt">address</span> <span class="n">_newWallet</span><span class="p">,</span> <span class="kt">address</span> <span class="n">_investorOnchainID</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">AddressFrozen</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">bool</span> <span class="k">indexed</span> <span class="n">_isFrozen</span><span class="p">,</span> <span class="kt">address</span> <span class="k">indexed</span> <span class="n">_owner</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">TokensFrozen</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">TokensUnfrozen</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">Paused</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">Unpaused</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">);</span>


    <span class="c1">// functions
</span>    <span class="c1">// getters
</span>    <span class="k">function</span> <span class="n">decimals</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint8</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">name</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">string</span> <span class="k">memory</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">onchainID</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">address</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">symbol</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">string</span> <span class="k">memory</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">version</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">string</span> <span class="k">memory</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">identityRegistry</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="n">IIdentityRegistry</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">compliance</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="n">ICompliance</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">paused</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">isFrozen</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">getFrozenTokens</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">);</span>

    <span class="c1">// setters
</span>    <span class="k">function</span> <span class="n">setName</span><span class="p">(</span><span class="kt">string</span> <span class="k">calldata</span> <span class="n">_name</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">setSymbol</span><span class="p">(</span><span class="kt">string</span> <span class="k">calldata</span> <span class="n">_symbol</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">setOnchainID</span><span class="p">(</span><span class="kt">address</span> <span class="n">_onchainID</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">pause</span><span class="p">()</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">unpause</span><span class="p">()</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">setAddressFrozen</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">_freeze</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">freezePartialTokens</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">unfreezePartialTokens</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">setIdentityRegistry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_identityRegistry</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">setCompliance</span><span class="p">(</span><span class="kt">address</span> <span class="n">_compliance</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// transfer actions
</span>    <span class="k">function</span> <span class="n">forcedTransfer</span><span class="p">(</span><span class="kt">address</span> <span class="n">_from</span><span class="p">,</span> <span class="kt">address</span> <span class="n">_to</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">mint</span><span class="p">(</span><span class="kt">address</span> <span class="n">_to</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">burn</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">recoveryAddress</span><span class="p">(</span><span class="kt">address</span> <span class="n">_lostWallet</span><span class="p">,</span> <span class="kt">address</span> <span class="n">_newWallet</span><span class="p">,</span> <span class="kt">address</span> <span class="n">_investorOnchainID</span><span class="p">)</span> <span class="k">external</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>

    <span class="c1">// batch functions
</span>    <span class="k">function</span> <span class="n">batchTransfer</span><span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_toList</span><span class="p">,</span> <span class="kt">uint256</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_amounts</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">batchForcedTransfer</span><span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_fromList</span><span class="p">,</span> <span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_toList</span><span class="p">,</span> <span class="kt">uint256</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_amounts</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">batchMint</span><span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_toList</span><span class="p">,</span> <span class="kt">uint256</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_amounts</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">batchBurn</span><span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_userAddresses</span><span class="p">,</span> <span class="kt">uint256</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_amounts</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">batchSetAddressFrozen</span><span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_userAddresses</span><span class="p">,</span> <span class="kt">bool</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_freeze</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">batchFreezePartialTokens</span><span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_userAddresses</span><span class="p">,</span> <span class="kt">uint256</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_amounts</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">batchUnfreezePartialTokens</span><span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_userAddresses</span><span class="p">,</span> <span class="kt">uint256</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_amounts</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// roles setting
</span>    <span class="k">function</span> <span class="n">transferOwnershipOnTokenContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_newOwner</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">addAgentOnTokenContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agent</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">removeAgentOnTokenContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agent</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>
<h3 id="identity-registry-interface">
<a href="#identity-registry-interface" class="anchor-link"></a> Identity Registry Interface
</h3>
<p>This Identity Registry is linked to storage that contains a dynamic whitelist of identities. The Identity Registry makes the link between a wallet address, an <a href="https://tokeny.com/onchainid/">ONCHAINID</a> and a country code corresponding to the country of residence of the investor, this country code is set in accordance with the <a href="https://www.iso.org/iso-3166-country-codes.html">ISO-3166 standard</a>. It also contains a function called <code class="language-plaintext highlighter-rouge">isVerified()</code>, which returns a status based on the validity of claims (as per the security token requirements) in the user’s ONCHAINID. The Identity Registry is managed by the agent wallet(s) i.e. only the agent(s) can add or remove identities in the registry (note: the agent role on the Identity Registry is set by the owner, therefore the owner could set himself as the agent if he wants to keep everything under his own control). There is a specific identity registry for each security token.
A detailed description of the functions can be found in the <a href="https://github.com/TokenySolutions/EIP3643/tree/main/interfaces">interfaces folder</a>.</p>
<p>Note that <a href="https://github.com/onchain-id/solidity/blob/master/contracts/interface/IClaimIssuer.sol"><code class="language-plaintext highlighter-rouge">IClaimIssuer</code></a> and <a href="https://github.com/onchain-id/solidity/blob/master/contracts/interface/IIdentity.sol"><code class="language-plaintext highlighter-rouge">IIdentity</code></a> are needed in this interface and are coming from <a href="https://github.com/onchain-id/solidity">ONCHAINID</a></p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="n">IIdentityRegistry</span> <span class="p">{</span>


    <span class="c1">// events
</span>    <span class="k">event</span> <span class="n">ClaimTopicsRegistrySet</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">claimTopicsRegistry</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityStorageSet</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">identityStorage</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">TrustedIssuersRegistrySet</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">trustedIssuersRegistry</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityRegistered</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">investorAddress</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="k">indexed</span> <span class="n">identity</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityRemoved</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">investorAddress</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="k">indexed</span> <span class="n">identity</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityUpdated</span><span class="p">(</span><span class="n">IIdentity</span> <span class="k">indexed</span> <span class="n">oldIdentity</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="k">indexed</span> <span class="n">newIdentity</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">CountryUpdated</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">investorAddress</span><span class="p">,</span> <span class="kt">uint16</span> <span class="k">indexed</span> <span class="n">country</span><span class="p">);</span>


    <span class="c1">// functions
</span>    <span class="c1">// identity registry getters
</span>    <span class="k">function</span> <span class="n">identityStorage</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="n">IIdentityRegistryStorage</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">issuersRegistry</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="n">ITrustedIssuersRegistry</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">topicsRegistry</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="n">IClaimTopicsRegistry</span><span class="p">);</span>

    <span class="c1">//identity registry setters
</span>    <span class="k">function</span> <span class="n">setIdentityRegistryStorage</span><span class="p">(</span><span class="kt">address</span> <span class="n">_identityRegistryStorage</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">setClaimTopicsRegistry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_claimTopicsRegistry</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">setTrustedIssuersRegistry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_trustedIssuersRegistry</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// registry actions
</span>    <span class="k">function</span> <span class="n">registerIdentity</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="n">_identity</span><span class="p">,</span> <span class="kt">uint16</span> <span class="n">_country</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">deleteIdentity</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">updateCountry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">uint16</span> <span class="n">_country</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">updateIdentity</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="n">_identity</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">batchRegisterIdentity</span><span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_userAddresses</span><span class="p">,</span> <span class="n">IIdentity</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_identities</span><span class="p">,</span> <span class="kt">uint16</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_countries</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// registry consultation
</span>    <span class="k">function</span> <span class="n">contains</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">isVerified</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">identity</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="n">IIdentity</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">investorCountry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint16</span><span class="p">);</span>

    <span class="c1">// roles setters
</span>    <span class="k">function</span> <span class="n">transferOwnershipOnIdentityRegistryContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_newOwner</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">addAgentOnIdentityRegistryContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agent</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">removeAgentOnIdentityRegistryContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agent</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h3 id="identity-registry-storage-interface">
<a href="#identity-registry-storage-interface" class="anchor-link"></a> Identity Registry Storage Interface
</h3>
<p>The Identity Registry Storage stores the identity addresses of all the authorized investors in the security token(s) linked to the storage contract i.e. all identities of investors who have been authorized to hold the token(s) after having gone through the appropriate KYC and eligibility checks. The Identity Registry Storage can be bound to one or several Identity Registry contract(s). The goal of the Identity Registry storage is to separate the Identity Registry functions and specifications from its storage, this way it is possible to keep one single Identity Registry contract per token, with its own Trusted Issuers Registry and Claim Topics Registry but with a shared whitelist of investors used by the <code class="language-plaintext highlighter-rouge">isVerifed()</code> function implemented in the Identity Registries to check the eligibility of the receiver in a transfer transaction.
A detailed description of the functions can be found in the <a href="https://github.com/TokenySolutions/EIP3643/tree/main/interfaces">interfaces folder</a>.</p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="n">IIdentityRegistryStorage</span> <span class="p">{</span>

    <span class="c1">//events
</span>    <span class="k">event</span> <span class="n">IdentityStored</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">investorAddress</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="k">indexed</span> <span class="n">identity</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityUnstored</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">investorAddress</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="k">indexed</span> <span class="n">identity</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityModified</span><span class="p">(</span><span class="n">IIdentity</span> <span class="k">indexed</span> <span class="n">oldIdentity</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="k">indexed</span> <span class="n">newIdentity</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">CountryModified</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">investorAddress</span><span class="p">,</span> <span class="kt">uint16</span> <span class="k">indexed</span> <span class="n">country</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityRegistryBound</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">identityRegistry</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">IdentityRegistryUnbound</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="n">identityRegistry</span><span class="p">);</span>

    <span class="c1">//functions
</span>    <span class="c1">// storage related functions
</span>    <span class="k">function</span> <span class="n">storedIdentity</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="n">IIdentity</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">storedInvestorCountry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint16</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">addIdentityToStorage</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="n">_identity</span><span class="p">,</span> <span class="kt">uint16</span> <span class="n">_country</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">removeIdentityFromStorage</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">modifyStoredInvestorCountry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="kt">uint16</span> <span class="n">_country</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">modifyStoredIdentity</span><span class="p">(</span><span class="kt">address</span> <span class="n">_userAddress</span><span class="p">,</span> <span class="n">IIdentity</span> <span class="n">_identity</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// role setter
</span>    <span class="k">function</span> <span class="n">transferOwnershipOnIdentityRegistryStorage</span><span class="p">(</span><span class="kt">address</span> <span class="n">_newOwner</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">bindIdentityRegistry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_identityRegistry</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">unbindIdentityRegistry</span><span class="p">(</span><span class="kt">address</span> <span class="n">_identityRegistry</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// getter for bound IdentityRegistry role
</span>    <span class="k">function</span> <span class="n">linkedIdentityRegistries</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">address</span><span class="p">[]</span> <span class="k">memory</span><span class="p">);</span>
<span class="p">}</span>

</code></pre></div></div>
<h3 id="compliance-interface">
<a href="#compliance-interface" class="anchor-link"></a> Compliance Interface
</h3>
<p>The Compliance is used to set the rules of the offering itself and ensures these rules are respected during the whole lifecycle of the token, e.g. the compliance contract will define the maximum amount of investors per country, the maximum amount of tokens per investor, the accepted countries for the circulation of the token (using the country code corresponding to each investor in the Identity Registry). The compliance smart contract is a “tailor-made” contract that is implemented in accordance with the legal requirements and following the desires of the token issuer. This contract is triggered at every transaction by the Token and returns <code class="language-plaintext highlighter-rouge">TRUE</code> if the transaction is compliant with the rules of the offering and <code class="language-plaintext highlighter-rouge">FALSE</code> otherwise.
A detailed description of the functions can be found in the <a href="https://github.com/TokenySolutions/EIP3643/tree/main/interfaces">interfaces folder</a>.</p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="n">ICompliance</span> <span class="p">{</span>

    <span class="c1">// events
</span>    <span class="k">event</span> <span class="n">TokenAgentAdded</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agentAddress</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">TokenAgentRemoved</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agentAddress</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">TokenBound</span><span class="p">(</span><span class="kt">address</span> <span class="n">_token</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">TokenUnbound</span><span class="p">(</span><span class="kt">address</span> <span class="n">_token</span><span class="p">);</span>

    <span class="c1">// functions
</span>    <span class="c1">// initialization of the compliance contract
</span>    <span class="k">function</span> <span class="n">addTokenAgent</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agentAddress</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">removeTokenAgent</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agentAddress</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">bindToken</span><span class="p">(</span><span class="kt">address</span> <span class="n">_token</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">unbindToken</span><span class="p">(</span><span class="kt">address</span> <span class="n">_token</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// check the parameters of the compliance contract
</span>    <span class="k">function</span> <span class="n">isTokenAgent</span><span class="p">(</span><span class="kt">address</span> <span class="n">_agentAddress</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">isTokenBound</span><span class="p">(</span><span class="kt">address</span> <span class="n">_token</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>

    <span class="c1">// compliance check and state update
</span>    <span class="k">function</span> <span class="n">canTransfer</span><span class="p">(</span><span class="kt">address</span> <span class="n">_from</span><span class="p">,</span> <span class="kt">address</span> <span class="n">_to</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">transferred</span><span class="p">(</span><span class="kt">address</span> <span class="n">_from</span><span class="p">,</span> <span class="kt">address</span> <span class="n">_to</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">created</span><span class="p">(</span><span class="kt">address</span> <span class="n">_to</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">destroyed</span><span class="p">(</span><span class="kt">address</span> <span class="n">_from</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// setting owner role
</span>    <span class="k">function</span> <span class="n">transferOwnershipOnComplianceContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">newOwner</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h3 id="trusted-issuers-registry-interface">
<a href="#trusted-issuers-registry-interface" class="anchor-link"></a> Trusted Issuer’s Registry Interface
</h3>
<p>The Trusted Issuer’s Registry stores the contract addresses (<a href="https://tokeny.com/onchainid/">ONCHAINID</a>) of all the trusted claim issuers for a specific security token. The <a href="https://tokeny.com/onchainid/">ONCHAINID</a> of token owners (the investors) must have claims signed by the claim issuers stored in this smart contract in order to be able to hold the token. The ownership of this contract is given to the token issuer allowing them to manage this registry as per their requirements.
A detailed description of the functions can be found in the <a href="https://github.com/TokenySolutions/EIP3643/tree/main/interfaces">interfaces folder</a></p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="n">ITrustedIssuersRegistry</span> <span class="p">{</span>

    <span class="c1">// events
</span>    <span class="k">event</span> <span class="n">TrustedIssuerAdded</span><span class="p">(</span><span class="n">IClaimIssuer</span> <span class="k">indexed</span> <span class="n">trustedIssuer</span><span class="p">,</span> <span class="kt">uint</span><span class="p">[]</span> <span class="n">claimTopics</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">TrustedIssuerRemoved</span><span class="p">(</span><span class="n">IClaimIssuer</span> <span class="k">indexed</span> <span class="n">trustedIssuer</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">ClaimTopicsUpdated</span><span class="p">(</span><span class="n">IClaimIssuer</span> <span class="k">indexed</span> <span class="n">trustedIssuer</span><span class="p">,</span> <span class="kt">uint</span><span class="p">[]</span> <span class="n">claimTopics</span><span class="p">);</span>

    <span class="c1">// functions
</span>    <span class="c1">// setters
</span>    <span class="k">function</span> <span class="n">addTrustedIssuer</span><span class="p">(</span><span class="n">IClaimIssuer</span> <span class="n">_trustedIssuer</span><span class="p">,</span> <span class="kt">uint</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_claimTopics</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">removeTrustedIssuer</span><span class="p">(</span><span class="n">IClaimIssuer</span> <span class="n">_trustedIssuer</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">updateIssuerClaimTopics</span><span class="p">(</span><span class="n">IClaimIssuer</span> <span class="n">_trustedIssuer</span><span class="p">,</span> <span class="kt">uint</span><span class="p">[]</span> <span class="k">calldata</span> <span class="n">_claimTopics</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// getters
</span>    <span class="k">function</span> <span class="n">getTrustedIssuers</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="n">IClaimIssuer</span><span class="p">[]</span> <span class="k">memory</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">isTrustedIssuer</span><span class="p">(</span><span class="kt">address</span> <span class="n">_issuer</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span><span class="p">(</span><span class="kt">bool</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">getTrustedIssuerClaimTopics</span><span class="p">(</span><span class="n">IClaimIssuer</span> <span class="n">_trustedIssuer</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span><span class="p">(</span><span class="kt">uint</span><span class="p">[]</span> <span class="k">memory</span><span class="p">);</span>
    <span class="k">function</span> <span class="n">hasClaimTopic</span><span class="p">(</span><span class="kt">address</span> <span class="n">_issuer</span><span class="p">,</span> <span class="kt">uint</span> <span class="n">_claimTopic</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span><span class="p">(</span><span class="kt">bool</span><span class="p">);</span>

    <span class="c1">// role setter
</span>    <span class="k">function</span> <span class="n">transferOwnershipOnIssuersRegistryContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_newOwner</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h3 id="claim-topics-registry-interface">
<a href="#claim-topics-registry-interface" class="anchor-link"></a> Claim Topics Registry Interface
</h3>
<p>The Claim Topics Registry stores all the trusted claim topics for the security token. The <a href="https://tokeny.com/onchainid/">ONCHAINID</a> of token owners must contain claims of the claim topics stored in this smart contract. The ownership of this contract is given to the token issuer allowing them to manage this registry as per their requirements.
A detailed description of the functions can be found in the <a href="https://github.com/TokenySolutions/EIP3643/tree/main/interfaces">interfaces folder</a></p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="n">IClaimTopicsRegistry</span> <span class="p">{</span>

    <span class="c1">// events
</span>    <span class="k">event</span> <span class="n">ClaimTopicAdded</span><span class="p">(</span><span class="kt">uint256</span> <span class="k">indexed</span> <span class="n">claimTopic</span><span class="p">);</span>
    <span class="k">event</span> <span class="n">ClaimTopicRemoved</span><span class="p">(</span><span class="kt">uint256</span> <span class="k">indexed</span> <span class="n">claimTopic</span><span class="p">);</span>

    <span class="c1">// functions
</span>    <span class="c1">// setters
</span>    <span class="k">function</span> <span class="n">addClaimTopic</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">_claimTopic</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
    <span class="k">function</span> <span class="n">removeClaimTopic</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">_claimTopic</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="c1">// getter
</span>    <span class="k">function</span> <span class="n">getClaimTopics</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">[]</span> <span class="k">memory</span><span class="p">);</span>

    <span class="c1">// role setter
</span>    <span class="k">function</span> <span class="n">transferOwnershipOnClaimTopicsRegistryContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_newOwner</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<p>The standard is implemented and tested with full coverage on Tokeny’s <a href="https://github.com/TokenySolutions/T-REX">T-REX repository</a></p>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security Considerations
</h2>
<p>The suite of Smart Contracts has been audited by an external and independent company. The results can be found in <a href="https://tokeny.com/wp-content/uploads/2020/05/Tokeny-Solutions_T-REX-v3_Smart-Contract-Audit-Report_Kapersky.pdf">this document</a>.</p>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/Joachim-Lebrun">Joachim Lebrun</a>, <a href="https://github.com/TonyMalghem">Tony Malghem</a>, <a href="https://github.com/Nakasar">Kevin Thizy</a>, <a href="https://github.com/lfalempin">Luc Falempin</a>, <a href="https://github.com/Aboudjem">Adam Boudjemaa</a>, "EIP-3643: T-REX - Token for Regulated EXchanges [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 3643, July 2021. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-3643.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-3643: T-REX - Token for Regulated EXchanges [DRAFT]",
    "author": "Joachim Lebrun (@Joachim-Lebrun), Tony Malghem (@TonyMalghem), Kevin Thizy (@Nakasar), Luc Falempin (@lfalempin), Adam Boudjemaa (@Aboudjem)",
    "name": "EIP-3643: T-REX - Token for Regulated EXchanges [DRAFT]",
    "dateCreated": "2021-07-09",
    "datePublished": "2021-07-09",

    "discussionUrl": "https://ethereum-magicians.org/t/eip-3643-proposition-of-the-t-rex-token-standard-for-securities/6844",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2021"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
