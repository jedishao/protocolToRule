<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-2612: permit – 712-signed approvals</title>
<meta property="og:title" content="EIP-2612: permit – 712-signed approvals" />
<meta name="description" content="ERC-20 approvals via secp256k1 signatures" />
<meta property="og:description" content="ERC-20 approvals via secp256k1 signatures" />
<meta name="twitter:description" content="ERC-20 approvals via secp256k1 signatures" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-2612" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-2612" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="review">
📖 This EIP is in the review stage. It is subject to changes and feedback is appreciated.
</div>
<div class="home">
<h1 class="page-heading">
EIP-2612: permit – 712-signed approvals
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3>ERC-20 approvals via secp256k1 signatures</h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/Mrchico">Martin Lundfall</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://github.com/ethereum/EIPs/issues/2613">https://github.com/ethereum/EIPs/issues/2613</a></td></tr>
<tr><th>Status</th><td>Review
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>ERC</td></tr>
<tr><th>Created</th><td>2020-04-13</td></tr>
<tr><th>Requires</th><td>
<a href="eip-20">20</a>,
<a href="eip-712">712</a>
</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a></li>
<li><a href="#rationale">Rationale</a></li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#reference-implementation">Reference Implementation</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>Arguably one of the main reasons for the success of <a href="/EIPS/eip-20">ERC-20</a> tokens lies in the interplay between <code class="language-plaintext highlighter-rouge">approve</code> and <code class="language-plaintext highlighter-rouge">transferFrom</code>, which allows for tokens to not only be transferred between externally owned accounts (EOA), but to be used in other contracts under application specific conditions by abstracting away <code class="language-plaintext highlighter-rouge">msg.sender</code> as the defining mechanism for token access control.</p>
<p>However, a limiting factor in this design stems from the fact that the ERC-20 <code class="language-plaintext highlighter-rouge">approve</code> function itself is defined in terms of <code class="language-plaintext highlighter-rouge">msg.sender</code>. This means that user’s <em>initial action</em> involving ERC-20 tokens must be performed by an EOA (<em>but see Note below</em>). If the user needs to interact with a smart contract, then they need to make 2 transactions (<code class="language-plaintext highlighter-rouge">approve</code> and the smart contract call which will internally call <code class="language-plaintext highlighter-rouge">transferFrom</code>). Even in the simple use case of paying another person, they need to hold ETH to pay for transaction gas costs.</p>
<p>This ERC extends the ERC-20 standard with a new function <code class="language-plaintext highlighter-rouge">permit</code>, which allows users to modify the <code class="language-plaintext highlighter-rouge">allowance</code> mapping using a signed message, instead of through <code class="language-plaintext highlighter-rouge">msg.sender</code>.</p>
<p>For an improved user experience, the signed data is structured following <a href="/EIPS/eip-712">ERC-712</a>, which already has wide spread adoption in major RPC providers.</p>
<p><strong><em>Note:</em></strong> ERC-20 must be performed by an EOA unless the address owning the token is actually a contract wallet. Although contract wallets solves many of the same problems that motivates this EIP, they are currently only scarcely adopted in the ecosystem. Contract wallets suffer from a UX problem – since they separate the EOA <code class="language-plaintext highlighter-rouge">owner</code> of the contract wallet from the contract wallet itself (which is meant to carry out actions on the <code class="language-plaintext highlighter-rouge">owner</code>s behalf and holds all of their funds), user interfaces need to be specifically designed to support them. The <code class="language-plaintext highlighter-rouge">permit</code> pattern reaps many of the same benefits while requiring little to no change in user interfaces.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>While ERC-20 tokens have become ubiquitous in the Ethereum ecosystem, their status remains that of second class tokens from the perspective of the protocol. The ability for users to interact with Ethereum without holding any ETH has been a <a href="/EIPS/eip-101">long outstanding goal</a> and the <a href="/EIPS/eip-1077">subject</a> <a href="/EIPS/eip-777">of</a> <a href="https://github.com/ethereum/EIPs/issues/1776">many</a> <a href="/EIPS/eip-1271">EIPs</a>.</p>
<p>So far, many of these proposals have seen very little adoption, and the ones that have been adopted (such as <a href="/EIPS/eip-777">ERC-777</a>), introduce a lot of additional functionality, causing <a href="https://medium.com/consensys-diligence/uniswap-audit-b90335ac007">unexpected behavior in mainstream contracts</a>.</p>
<p>This ERC proposes an alternative solution which is designed to be as minimal as possible and to only address <em>one problem</em>: the lack of abstraction in the ERC-20 <code class="language-plaintext highlighter-rouge">approve</code> method.</p>
<p>While it may be tempting to introduce <code class="language-plaintext highlighter-rouge">*_by_signature</code> counterparts for every ERC-20 function, they are intentionally left out of this ERC-20 for two reasons:</p>
<ul>
<li>the desired specifics of such functions, such as decision regarding fees for <code class="language-plaintext highlighter-rouge">transfer_by_signature</code>, possible batching algorithms, varies depending on the use case, and,</li>
<li>they can be implemented using a combination of <code class="language-plaintext highlighter-rouge">permit</code> and additional helper contracts without loss of generality.</li>
</ul>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<p>Three new functions are added to the ERC-20 ABI:</p>
<pre><code class="language-sol">function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external
function nonces(address owner) external view returns (uint)
function DOMAIN_SEPARATOR() external view returns (bytes32)
</code></pre>
<p>The semantics of which are as follows:</p>
<p>For all addresses <code class="language-plaintext highlighter-rouge">owner</code>, <code class="language-plaintext highlighter-rouge">spender</code>, uint256s <code class="language-plaintext highlighter-rouge">value</code>, <code class="language-plaintext highlighter-rouge">deadline</code> and <code class="language-plaintext highlighter-rouge">nonce</code>, uint8 <code class="language-plaintext highlighter-rouge">v</code>, bytes32 <code class="language-plaintext highlighter-rouge">r</code> and <code class="language-plaintext highlighter-rouge">s</code>,
a call to <code class="language-plaintext highlighter-rouge">permit(owner, spender, value, deadline, v, r, s)</code> will set
<code class="language-plaintext highlighter-rouge">approval[owner][spender]</code> to <code class="language-plaintext highlighter-rouge">value</code>,
increment <code class="language-plaintext highlighter-rouge">nonces[owner]</code> by 1,
and emit a corresponding <code class="language-plaintext highlighter-rouge">Approval</code> event,
if and only if the following conditions are met:</p>
<ul>
<li>The current blocktime is less than or equal to <code class="language-plaintext highlighter-rouge">deadline</code>.</li>
<li><code class="language-plaintext highlighter-rouge">owner</code> is not the zero address.</li>
<li><code class="language-plaintext highlighter-rouge">nonces[owner]</code> (before the state update) is equal to <code class="language-plaintext highlighter-rouge">nonce</code>.</li>
<li><code class="language-plaintext highlighter-rouge">r</code>, <code class="language-plaintext highlighter-rouge">s</code> and <code class="language-plaintext highlighter-rouge">v</code> is a valid <code class="language-plaintext highlighter-rouge">secp256k1</code> signature from <code class="language-plaintext highlighter-rouge">owner</code> of the message:</li>
</ul>
<p>If any of these conditions are not met, the <code class="language-plaintext highlighter-rouge">permit</code> call must revert.</p>
<pre><code class="language-sol">keccak256(abi.encodePacked(
   hex"1901",
   DOMAIN_SEPARATOR,
   keccak256(abi.encode(
            keccak256("Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"),
            owner,
            spender,
            value,
            nonce,
            deadline))
))
</code></pre>
<p>where <code class="language-plaintext highlighter-rouge">DOMAIN_SEPARATOR</code> is defined according to EIP-712. The <code class="language-plaintext highlighter-rouge">DOMAIN_SEPARATOR</code> should be unique to the contract and chain to prevent replay attacks from other domains,
and satisfy the requirements of EIP-712, but is otherwise unconstrained.
A common choice for <code class="language-plaintext highlighter-rouge">DOMAIN_SEPARATOR</code> is:</p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">DOMAIN_SEPARATOR</span> <span class="o">=</span> <span class="nb">keccak256</span><span class="p">(</span>
    <span class="n">abi</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span>
        <span class="nb">keccak256</span><span class="p">(</span><span class="s">'EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'</span><span class="p">),</span>
        <span class="nb">keccak256</span><span class="p">(</span><span class="kt">bytes</span><span class="p">(</span><span class="n">name</span><span class="p">)),</span>
        <span class="nb">keccak256</span><span class="p">(</span><span class="kt">bytes</span><span class="p">(</span><span class="n">version</span><span class="p">)),</span>
        <span class="n">chainid</span><span class="p">,</span>
        <span class="kt">address</span><span class="p">(</span><span class="nb">this</span><span class="p">)</span>
<span class="p">));</span>
</code></pre></div></div>
<p>In other words, the message is the ERC-712 typed structure:</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">types</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">EIP712Domain</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">version</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">chainId</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">uint256</span><span class="dl">"</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">verifyingContract</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">address</span><span class="dl">"</span>
      <span class="p">}</span>
    <span class="p">],</span>
    <span class="dl">"</span><span class="s2">Permit</span><span class="dl">"</span><span class="p">:</span> <span class="p">[{</span>
      <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">owner</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">address</span><span class="dl">"</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">spender</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">address</span><span class="dl">"</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">value</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">uint256</span><span class="dl">"</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">nonce</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">uint256</span><span class="dl">"</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">deadline</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">uint256</span><span class="dl">"</span>
      <span class="p">}</span>
    <span class="p">],</span>
    <span class="dl">"</span><span class="s2">primaryType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Permit</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">domain</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
      <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="nx">erc20name</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">version</span><span class="dl">"</span><span class="p">:</span> <span class="nx">version</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">chainId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">chainid</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">verifyingContract</span><span class="dl">"</span><span class="p">:</span> <span class="nx">tokenAddress</span>
  <span class="p">},</span>
  <span class="dl">"</span><span class="s2">message</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">owner</span><span class="dl">"</span><span class="p">:</span> <span class="nx">owner</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">spender</span><span class="dl">"</span><span class="p">:</span> <span class="nx">spender</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">value</span><span class="dl">"</span><span class="p">:</span> <span class="nx">value</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">nonce</span><span class="dl">"</span><span class="p">:</span> <span class="nx">nonce</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">deadline</span><span class="dl">"</span><span class="p">:</span> <span class="nx">deadline</span>
  <span class="p">}</span>
<span class="p">}}</span>
</code></pre></div></div>
<p>Note that nowhere in this definition we refer to <code class="language-plaintext highlighter-rouge">msg.sender</code>. The caller of the <code class="language-plaintext highlighter-rouge">permit</code> function can be any address.</p>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<p>The <code class="language-plaintext highlighter-rouge">permit</code> function is sufficient for enabling any operation involving ERC-20 tokens to be paid for using the token itself, rather than using ETH.
An example of a contract which enables gasless token transactions can be found <a href="https://github.com/dapphub/ds-dach">here</a>.</p>
<p>It avoids any calls to unknown code.</p>
<p>The <code class="language-plaintext highlighter-rouge">nonces</code> mapping is given for replay protection.</p>
<p>A common use case of <code class="language-plaintext highlighter-rouge">permit</code> has a relayer submit a <code class="language-plaintext highlighter-rouge">Permit</code> on behalf of the <code class="language-plaintext highlighter-rouge">owner</code>. In this scenario, the relaying party is essentially given a free option to submit or withhold the <code class="language-plaintext highlighter-rouge">Permit</code>. If this is a cause of concern, the <code class="language-plaintext highlighter-rouge">owner</code> can limit the time a <code class="language-plaintext highlighter-rouge">Permit</code> is valid for by setting <code class="language-plaintext highlighter-rouge">deadline</code> to a value in the near future. The <code class="language-plaintext highlighter-rouge">deadline</code> argument can be set to <code class="language-plaintext highlighter-rouge">uint(-1)</code> to create <code class="language-plaintext highlighter-rouge">Permit</code>s that effectively never expire.</p>
<p>ERC-712 typed messages are included because of its wide spread adoption in many wallet providers.</p>
<h2 id="backwards-compatibility">
<a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>There are already a couple of <code class="language-plaintext highlighter-rouge">permit</code> functions in token contracts implemented in contracts in the wild, most notably the one introduced in the <code class="language-plaintext highlighter-rouge">dai.sol</code>.</p>
<p>Its implementation differs slightly from the presentation here in that:</p>
<ul>
<li>instead of taking a <code class="language-plaintext highlighter-rouge">value</code> argument, it takes a bool <code class="language-plaintext highlighter-rouge">allowed</code>, setting approval to 0 or <code class="language-plaintext highlighter-rouge">uint(-1)</code>.</li>
<li>the <code class="language-plaintext highlighter-rouge">deadline</code> argument is instead called <code class="language-plaintext highlighter-rouge">expiry</code>. This is not just a syntactic change, as it effects the contents of the signed message.</li>
</ul>
<p>There is also an implementation in the token <a href="https://etherscan.io/address/0x0Ae055097C6d159879521C384F1D2123D1f195e6#code"><code class="language-plaintext highlighter-rouge">Stake</code></a> with the same ABI as <code class="language-plaintext highlighter-rouge">dai</code> but with different semantics: it lets users issue “expiring approvals”, that only allow <code class="language-plaintext highlighter-rouge">transferFrom</code> to occur while <code class="language-plaintext highlighter-rouge">expiry &gt;= block.timestamp</code>.</p>
<p>The specification presented here is in line with the implementation in <a href="https://github.com/uniswap/uniswap-v2-core">Uniswap-v2</a>.</p>
<p>The requirement to revert if the permit is invalid was added when the EIP was already widely deployed, but at the moment it was consistent with all found implementations.</p>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<p>Some basic tests can be found here https://github.com/Uniswap/uniswap-v2-core/blob/master/test/UniswapV2ERC20.spec.ts.</p>
<h2 id="reference-implementation">
<a href="#reference-implementation" class="anchor-link"></a> Reference Implementation
</h2>
<p><a href="https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol">UniswapV2ERC20.sol</a></p>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security Considerations
</h2>
<p>Though the signer of a <code class="language-plaintext highlighter-rouge">Permit</code> may have a certain party in mind to submit their transaction, another party can always front run this transaction and call <code class="language-plaintext highlighter-rouge">permit</code> before the intended party. The end result is the same for the <code class="language-plaintext highlighter-rouge">Permit</code> signer, however.</p>
<p>Since the ecrecover precompile fails silently and just returns the zero address as <code class="language-plaintext highlighter-rouge">signer</code> when given malformed messages, it is important to ensure <code class="language-plaintext highlighter-rouge">owner != address(0)</code> to avoid <code class="language-plaintext highlighter-rouge">permit</code> from creating an approval to spend “zombie funds” belong to the zero address.</p>
<p>Signed <code class="language-plaintext highlighter-rouge">Permit</code> messages are censorable. The relaying party can always choose to not submit the <code class="language-plaintext highlighter-rouge">Permit</code> after having received it, withholding the option to submit it. The <code class="language-plaintext highlighter-rouge">deadline</code> parameter is one mitigation to this. If the signing party holds ETH they can also just submit the <code class="language-plaintext highlighter-rouge">Permit</code> themselves, which can render previously signed <code class="language-plaintext highlighter-rouge">Permit</code>s invalid.</p>
<p>The standard <a href="https://swcregistry.io/docs/SWC-114">ERC-20 race condition for approvals</a> applies to <code class="language-plaintext highlighter-rouge">permit</code> as well.</p>
<p>If the <code class="language-plaintext highlighter-rouge">DOMAIN_SEPARATOR</code> contains the <code class="language-plaintext highlighter-rouge">chainId</code> and is defined at contract deployment instead of reconstructed for every signature, there is a risk of possible replay attacks between chains in the event of a future chain split.</p>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/Mrchico">Martin Lundfall</a>, "EIP-2612: permit – 712-signed approvals [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 2612, April 2020. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-2612.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-2612: permit – 712-signed approvals [DRAFT]",
    "author": "Martin Lundfall (@Mrchico)",
    "name": "EIP-2612: permit – 712-signed approvals [DRAFT]",
    "dateCreated": "2020-04-13",
    "datePublished": "2020-04-13",

    "discussionUrl": "https://github.com/ethereum/EIPs/issues/2613",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2020"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
