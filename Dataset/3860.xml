<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-3860: Limit and meter initcode</title>
<meta property="og:title" content="EIP-3860: Limit and meter initcode" />
<meta name="description" content="Limit the maximum size of initcode to 49152 and apply extra gas cost of 2 for every 32-byte chunk of initcode" />
<meta property="og:description" content="Limit the maximum size of initcode to 49152 and apply extra gas cost of 2 for every 32-byte chunk of initcode" />
<meta name="twitter:description" content="Limit the maximum size of initcode to 49152 and apply extra gas cost of 2 for every 32-byte chunk of initcode" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-3860" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-3860" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="review">
📖 This EIP is in the review stage. It is subject to changes and feedback is appreciated.
</div>
<div class="home">
<h1 class="page-heading">
EIP-3860: Limit and meter initcode
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3860.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3>Limit the maximum size of initcode to 49152 and apply extra gas cost of 2 for every 32-byte chunk of initcode</h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/holiman">Martin Holst Swende</a>, <a href="https://github.com/chfast">Paweł Bylica</a>, <a href="https://github.com/axic">Alex Beregszaszi</a>, <a href="https://github.com/gumb0">Andrei Maiboroda</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/eip-3860-limit-and-meter-initcode/7018">https://ethereum-magicians.org/t/eip-3860-limit-and-meter-initcode/7018</a></td></tr>
<tr><th>Status</th><td>Review
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>Core</td></tr>
<tr><th>Created</th><td>2021-07-16</td></tr>
<tr><th>Requires</th><td>
<a href="eip-170">170</a>
</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a>
<ul>
<li><a href="#parameters">Parameters</a></li>
<li><a href="#rules">Rules</a></li>
</ul>
</li>
<li><a href="#rationale">Rationale</a>
<ul>
<li><a href="#gas-cost-constant">Gas cost constant</a></li>
<li><a href="#gas-cost-per-word-32-byte-chunk">Gas cost per word (32-byte chunk)</a></li>
<li><a href="#reason-for-size-limit-of-initcode">Reason for size limit of initcode</a></li>
<li><a href="#effect-of-size-limit-of-initcode">Effect of size limit of initcode</a></li>
<li><a href="#initcode-cost-for-create-transaction">Initcode cost for create transaction</a></li>
<li><a href="#how-to-report-initcode-limit-violation">How to report initcode limit violation?</a></li>
</ul>
</li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>We extend <a href="/EIPS/eip-170">EIP-170</a> by introducing a maximum size limit for <code class="language-plaintext highlighter-rouge">initcode</code> (<code class="language-plaintext highlighter-rouge">MAX_INITCODE_SIZE = 2 * MAX_CODE_SIZE = 49152</code>).</p>
<p>Furthermore, we introduce a charge of <code class="language-plaintext highlighter-rouge">2</code> gas for every 32-byte chunk of <code class="language-plaintext highlighter-rouge">initcode</code> to represent the cost of jumpdest-analysis.</p>
<p>Lastly, the size limit results in the nice-to-have property that EVM code size, code offset (<code class="language-plaintext highlighter-rouge">PC</code>), and jump offset fits a 16-bit value.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>During contract creation the client has to perform jumpdest-analysis on the <code class="language-plaintext highlighter-rouge">initcode</code> prior to execution. The work performed scales linearly with the size of the <code class="language-plaintext highlighter-rouge">initcode</code>. This work currently is not metered, nor is there a protocol enforced upper bound for the size.</p>
<p>There are three costs charged today:</p>
<ol>
<li>Cost for calldata aka <code class="language-plaintext highlighter-rouge">initcode</code>: 4 gas for a byte with the value of zero, and 16 gas otherwise.</li>
<li>Cost for the resulting deployed code: 200 gas per byte.</li>
<li>Cost of address calculation (hashing of code) in case of <code class="language-plaintext highlighter-rouge">CREATE2</code> only: 6 gas per word.</li>
</ol>
<p>Only the first cost applies to <code class="language-plaintext highlighter-rouge">initcode</code>, but only in the case of contract creation transactions. For the case of <code class="language-plaintext highlighter-rouge">CREATE</code>/<code class="language-plaintext highlighter-rouge">CREATE2</code> there is no such cost, and it is possible to programmatically generate variations of initcode in a relatively cheap manner. In the past it was possible to craft malicious <code class="language-plaintext highlighter-rouge">initcode</code> due to a vulnerability fixed in 2017 by <a href="https://github.com/ethereum/go-ethereum/releases/tag/v1.6.5">geth 1.6.5</a>.</p>
<p>Furthermore the lack of a limit has caused lengthy discussions for some EVM proposals, influencing the design, or even causing a delay or cancellation of a feature.</p>
<p>We are motivated by three reasons:</p>
<ol>
<li>Ensuring <code class="language-plaintext highlighter-rouge">initcode</code> is fairly charged (most importantly cost is proportional to <code class="language-plaintext highlighter-rouge">initcode</code>’s length) to minimize the risks for the future.</li>
<li>To have a cost system which is extendable in the future (i.e. for proposals like EIP-3670).</li>
<li>To simplify EVM engines by the explicit limits (code size, code offsets (<code class="language-plaintext highlighter-rouge">PC</code>), and jump offsets fit 16-bits).</li>
</ol>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<h3 id="parameters">
<a href="#parameters" class="anchor-link"></a> Parameters
</h3>
<table>
<thead>
<tr>
<th>Constant</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td><code class="language-plaintext highlighter-rouge">INITCODE_WORD_COST</code></td>
<td><code class="language-plaintext highlighter-rouge">2</code></td>
</tr>
<tr>
<td><code class="language-plaintext highlighter-rouge">MAX_INITCODE_SIZE</code></td>
<td><code class="language-plaintext highlighter-rouge">2 * MAX_CODE_SIZE</code></td>
</tr>
</tbody>
</table>
<p>Where <code class="language-plaintext highlighter-rouge">MAX_CODE_SIZE</code> is defined by <a href="/EIPS/eip-170">EIP-170</a> as <code class="language-plaintext highlighter-rouge">24576</code>.</p>
<p>We define <code class="language-plaintext highlighter-rouge">initcode_cost(initcode)</code> to equal <code class="language-plaintext highlighter-rouge">INITCODE_WORD_COST * ceil(len(initcode) / 32)</code>.</p>
<h3 id="rules">
<a href="#rules" class="anchor-link"></a> Rules
</h3>
<ol>
<li>If length of transaction data (<code class="language-plaintext highlighter-rouge">initcode</code>) in a create transaction exceeds <code class="language-plaintext highlighter-rouge">MAX_INITCODE_SIZE</code>, transaction is invalid. (<em>Note that this is similar to transactions considered invalid for not meeting the intrinsic gas cost requirement.</em>)</li>
<li>For a create transaction, extend the transaction data cost formula to include <code class="language-plaintext highlighter-rouge">initcode_cost(initcode)</code>. (<em>Note that this is included in transaction intrinsic cost, i.e. transaction with not enough gas to cover initcode cost is invalid.</em>)</li>
<li>If length of <code class="language-plaintext highlighter-rouge">initcode</code> to <code class="language-plaintext highlighter-rouge">CREATE</code> or <code class="language-plaintext highlighter-rouge">CREATE2</code> instructions exceeds <code class="language-plaintext highlighter-rouge">MAX_INITCODE_SIZE</code>, instruction execution ends with the result <code class="language-plaintext highlighter-rouge">0</code> pushed on the stack. Gas for initcode execution is not deducted in this case.</li>
<li>For the <code class="language-plaintext highlighter-rouge">CREATE</code> and <code class="language-plaintext highlighter-rouge">CREATE2</code> instructions charge an extra gas cost equaling to <code class="language-plaintext highlighter-rouge">initcode_cost(initcode)</code>. This cost is deducted before the calculation of the resulting contract address and the execution of <code class="language-plaintext highlighter-rouge">initcode</code>. (<em>Note that this means before or at the same time as the hashing cost is applied in <code class="language-plaintext highlighter-rouge">CREATE2</code>.</em>)</li>
</ol>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<h3 id="gas-cost-constant">
<a href="#gas-cost-constant" class="anchor-link"></a> Gas cost constant
</h3>
<p>The value of <code class="language-plaintext highlighter-rouge">INITCODE_WORD_COST</code> is selected based on performance benchmarks of differing worst-cases per implementation. The baseline for the benchmarks is the performance of <code class="language-plaintext highlighter-rouge">KECCAK256</code> hashing in geth 1.10.9, which matches the 70 Mgas/s gas limit target on a 4.0 GHz x86_64 CPU.</p>
<table>
<thead>
<tr>
<th>EVM</th>
<th>version</th>
<th>MB/s</th>
<th>B/CPUcycle</th>
<th>CPUcycle/B</th>
<th>cost of 1 B</th>
<th>cost of 32 B</th>
</tr>
</thead>
<tbody>
<tr>
<td>geth/KECCAK256</td>
<td>1.10.9</td>
<td>357</td>
<td>1.8</td>
<td>0.6</td>
<td>0.2</td>
<td>6.0</td>
</tr>
<tr>
<td>geth</td>
<td>1.10.9</td>
<td>1091</td>
<td>5.5</td>
<td>0.2</td>
<td>0.1</td>
<td>2.0</td>
</tr>
<tr>
<td>evmone/Baseline</td>
<td>0.8.2</td>
<td>727</td>
<td>3.7</td>
<td>0.3</td>
<td>0.1</td>
<td>2.9</td>
</tr>
<tr>
<td>evmone/Advanced</td>
<td>0.8.2</td>
<td>155</td>
<td>0.8</td>
<td>1.3</td>
<td>0.4</td>
<td>13.8</td>
</tr>
</tbody>
</table>
<h3 id="gas-cost-per-word-32-byte-chunk">
<a href="#gas-cost-per-word-32-byte-chunk" class="anchor-link"></a> Gas cost per word (32-byte chunk)
</h3>
<p>We have chosen the cost of 2 gas per word based on Geth’s implementation and comparing with <code class="language-plaintext highlighter-rouge">KECCAK256</code> performance. This means the per byte cost is <code class="language-plaintext highlighter-rouge">0.0625</code>. While fractional gas costs are not permitted in the EVM, we can approximate it by charging per-word.</p>
<p>Moreover, calculating gas per word is compatible with the calculation of <code class="language-plaintext highlighter-rouge">CREATE2</code>’s <em>hashcost</em> of <a href="/EIPS/eip-1014">EIP-1014</a>. Therefore the same implementation may be used for <code class="language-plaintext highlighter-rouge">CREATE</code> and <code class="language-plaintext highlighter-rouge">CREATE2</code> with different cost constants: before activation <code class="language-plaintext highlighter-rouge">0</code> for <code class="language-plaintext highlighter-rouge">CREATE</code> and <code class="language-plaintext highlighter-rouge">6</code> for <code class="language-plaintext highlighter-rouge">CREATE2</code>, after activation <code class="language-plaintext highlighter-rouge">2</code> for <code class="language-plaintext highlighter-rouge">CREATE</code> and <code class="language-plaintext highlighter-rouge">6 + 2</code> for <code class="language-plaintext highlighter-rouge">CREATE2</code>.</p>
<h3 id="reason-for-size-limit-of-initcode">
<a href="#reason-for-size-limit-of-initcode" class="anchor-link"></a> Reason for size limit of initcode
</h3>
<p>Estimating and creating worst case scenarios is easier with an upper bound in place, given one parameter for the search is greatly reduced. This allows for selecting a much more optimistic gas per byte.</p>
<p>Should there be no upper bound, the cost would need to be higher accounting for unknown unknowns. Given most <em>initcode</em> (<em>TODO: state maximum initcode size resulting in deployment seen on mainnet here</em>) does not exceed the proposed limit, penalising contracts by overly conservative costs seems unnecessary.</p>
<h3 id="effect-of-size-limit-of-initcode">
<a href="#effect-of-size-limit-of-initcode" class="anchor-link"></a> Effect of size limit of initcode
</h3>
<p>In most, if not all cases when a new contract is being created, the resulting runtime code is copied from the initcode itself. For the basic case the <code class="language-plaintext highlighter-rouge">2 * MAX_CODE_SIZE</code> limit allows <code class="language-plaintext highlighter-rouge">MAX_CODE_SIZE</code> for runtime code and another <code class="language-plaintext highlighter-rouge">MAX_CODE_SIZE</code> for contract constructor code. However, the limit may have practical implications for cases where multiple contracts are deployed in a single create transaction.</p>
<h3 id="initcode-cost-for-create-transaction">
<a href="#initcode-cost-for-create-transaction" class="anchor-link"></a> Initcode cost for create transaction
</h3>
<p>The initcode cost for create transaction data (0.0625 gas per byte) is negligible compared to the transaction data cost (4 or 16 gas per byte). Despite that, we decided to include it in the specification for consistency, and more importantly for forward compatibility.</p>
<h3 id="how-to-report-initcode-limit-violation">
<a href="#how-to-report-initcode-limit-violation" class="anchor-link"></a> How to report initcode limit violation?
</h3>
<p>We specified that initcode size limit violation for <code class="language-plaintext highlighter-rouge">CREATE</code>/<code class="language-plaintext highlighter-rouge">CREATE2</code> results in <code class="language-plaintext highlighter-rouge">0</code> on stack. Most checks in these instructions are specified this way, with the exception of 3 checks not specific to creation instructions (stack underflow, out of gas, static call violation). In these three cases the entire execution is exceptionally aborted. However we decided to be consistent with the majority of the possible error conditions in order to keep the specification and implementations simple.</p>
<h2 id="backwards-compatibility">
<a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>This EIP requires a “network upgrade”, since it modifies consensus rules.</p>
<p>Already deployed contracts should not be effected, but certain transactions (with <code class="language-plaintext highlighter-rouge">initcode</code> beyond the proposed limit) would still be includable in a block, but result in an exceptional abort.</p>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security Considerations
</h2>
<p>For client implementations, this EIP makes attacks based on jumpdest-analysis less problematic, so should increase the robustness of clients.</p>
<p>For layer 2, this EIP introduces failure-modes where there previously were none. There <em>could</em> exist factory-contracts which deploy multi-level contract hierarchies, such that the code for multiple contracts are included in the initcode of the first contract. The author(s) of this EIP are not aware of any such contracts.</p>
<p>Currently, on London, with <code class="language-plaintext highlighter-rouge">30M</code> gas limit, it would be possible to trigger jumpdest-analysis of a total <code class="language-plaintext highlighter-rouge">~1.3GB</code> of initcode. With this EIP, the cost for such an attack would increase by roughly <code class="language-plaintext highlighter-rouge">80M</code> gas.</p>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<p>Tests should include the following cases:</p>
<ul>
<li>Creation transaction with gas limit enough to cover initcode cost</li>
<li>Creation transaction with gas limit enough to cover intrinsic cost except initcode cost</li>
<li><code class="language-plaintext highlighter-rouge">CREATE</code>/<code class="language-plaintext highlighter-rouge">CREATE2</code>/creation transaction with <code class="language-plaintext highlighter-rouge">len(initcode)</code> at <code class="language-plaintext highlighter-rouge">MAX_INITCODE_SIZE</code></li>
<li><code class="language-plaintext highlighter-rouge">CREATE</code>/<code class="language-plaintext highlighter-rouge">CREATE2</code>/creation transaction with <code class="language-plaintext highlighter-rouge">len(initcode)</code> at <code class="language-plaintext highlighter-rouge">MAX_INITCODE_SIZE+1</code></li>
</ul>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/holiman">Martin Holst Swende</a>, <a href="https://github.com/chfast">Paweł Bylica</a>, <a href="https://github.com/axic">Alex Beregszaszi</a>, <a href="https://github.com/gumb0">Andrei Maiboroda</a>, "EIP-3860: Limit and meter initcode [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 3860, July 2021. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-3860.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-3860: Limit and meter initcode [DRAFT]",
    "author": "Martin Holst Swende (@holiman), Paweł Bylica (@chfast), Alex Beregszaszi (@axic), Andrei Maiboroda (@gumb0)",
    "name": "EIP-3860: Limit and meter initcode [DRAFT]",
    "dateCreated": "2021-07-16",
    "datePublished": "2021-07-16",

    "discussionUrl": "https://ethereum-magicians.org/t/eip-3860-limit-and-meter-initcode/7018",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2021"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
