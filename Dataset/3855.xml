<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-3855: PUSH0 instruction</title>
<meta property="og:title" content="EIP-3855: PUSH0 instruction" />
<meta name="description" content="Introduce a new instruction which pushes the constant value 0 onto the stack" />
<meta property="og:description" content="Introduce a new instruction which pushes the constant value 0 onto the stack" />
<meta name="twitter:description" content="Introduce a new instruction which pushes the constant value 0 onto the stack" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-3855" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-3855" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="review">
üìñ This EIP is in the review stage. It is subject to changes and feedback is appreciated.
</div>
<div class="home">
<h1 class="page-heading">
EIP-3855: PUSH0 instruction
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3855.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3>Introduce a new instruction which pushes the constant value 0 onto the stack</h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/axic">Alex Beregszaszi</a>, <a href="https://github.com/hugo-dc">Hugo De la cruz</a>, <a href="https://github.com/chfast">Pawe≈Ç Bylica</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/eip-3855-push0-instruction/7014">https://ethereum-magicians.org/t/eip-3855-push0-instruction/7014</a></td></tr>
<tr><th>Status</th><td>Review
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>Core</td></tr>
<tr><th>Created</th><td>2021-02-19</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a></li>
<li><a href="#rationale">Rationale</a>
<ul>
<li><a href="#gas-cost">Gas cost</a></li>
<li><a href="#opcode">Opcode</a></li>
</ul>
</li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>Introduce the <code class="language-plaintext highlighter-rouge">PUSH0</code> (<code class="language-plaintext highlighter-rouge">0x5f</code>) instruction, which pushes the constant value 0 onto the stack.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>Many instructions expect offsets as inputs, which in a number of cases are zero. A good example is the return data parameters of <code class="language-plaintext highlighter-rouge">CALLs</code>, which are set to zeroes in case the contract prefers using <code class="language-plaintext highlighter-rouge">RETURNDATA*</code>. This is only one example, but there are many other reasons why a contract would need to push a zero value. They can achieve that today by <code class="language-plaintext highlighter-rouge">PUSH1 0</code>, which costs 3 gas at runtime, and is encoded as two bytes which means <code class="language-plaintext highlighter-rouge">2 * 200</code> gas deployment cost.</p>
<p>Because of the overall cost many try to use various other instructions to achieve the same effect. Common examples include <code class="language-plaintext highlighter-rouge">PC</code>, <code class="language-plaintext highlighter-rouge">MSIZE</code>, <code class="language-plaintext highlighter-rouge">CALLDATASIZE</code>, <code class="language-plaintext highlighter-rouge">RETURNDATASIZE</code>, <code class="language-plaintext highlighter-rouge">CODESIZE</code>, <code class="language-plaintext highlighter-rouge">CALLVALUE</code>, and <code class="language-plaintext highlighter-rouge">SELFBALANCE</code>. Some of these cost only 2 gas and are a single byte long, but their value can depend on the context.</p>
<p>We have conducted an analysis on Mainnet (block ranges 8,567,259‚Ä¶8,582,058 and 12,205,970‚Ä¶12,817,405), and ~11.5% of all the <code class="language-plaintext highlighter-rouge">PUSH*</code> instructions executed push a value of zero.</p>
<p>The main motivations for this change include:</p>
<ol>
<li>Reducing contract code size.</li>
<li>Reducing the risk of contracts (mis)using various instructions as an optimisation measure. Repricing/changing those instructions can be more risky.</li>
<li>Reduce the need to use <code class="language-plaintext highlighter-rouge">DUP</code> instructions for duplicating zeroes.</li>
</ol>
<p>To put the ‚Äúwaste‚Äù into perspective, across existing accounts 340,557,331 bytes are wasted on <code class="language-plaintext highlighter-rouge">PUSH1 00</code> instructions, which means 68,111,466,200 gas was spent to deploy them. In practice a lot of these accounts share identical bytecode with others, so their total stored size in clients is lower, however the deploy time cost must have been paid nevertheless.</p>
<p>An example for 2) is changing the behaviour of <code class="language-plaintext highlighter-rouge">RETURNDATASIZE</code> such that it may not be guaranteed to be zero at the beginning of the call frame. This was proposed as a way to chain transactions (i.e. EIP-2733).</p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<p>The instruction <code class="language-plaintext highlighter-rouge">PUSH0</code> is introduced at <code class="language-plaintext highlighter-rouge">0x5f</code>. It has no immediate data, pops no items from the stack, and places a single item with the value 0 onto the stack. The cost of this instruction is 2 gas (aka <code class="language-plaintext highlighter-rouge">base</code>).</p>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<h3 id="gas-cost">
<a href="#gas-cost" class="anchor-link"></a> Gas cost
</h3>
<p>The <code class="language-plaintext highlighter-rouge">base</code> gas cost is used for instructions which place constant values onto the stack, such as <code class="language-plaintext highlighter-rouge">ADDRESS</code>, <code class="language-plaintext highlighter-rouge">ORIGIN</code>, and so forth.</p>
<h3 id="opcode">
<a href="#opcode" class="anchor-link"></a> Opcode
</h3>
<p><code class="language-plaintext highlighter-rouge">0x5f</code> means it is in a ‚Äúcontiguous‚Äù space with the rest of the <code class="language-plaintext highlighter-rouge">PUSH</code> implementations and potentially could share the implementation.</p>
<h2 id="backwards-compatibility">
<a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>This EIP introduces a new opcode which did not exists previously. Already deployed contracts using this opcode could change their behaviour after this EIP.</p>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<ul>
<li><code class="language-plaintext highlighter-rouge">5F</code> ‚Äì successful execution, stack consist of a single item, set to zero</li>
<li><code class="language-plaintext highlighter-rouge">5F5F..5F</code> (1024 times) ‚Äì successful execution, stack consists of 1024 items, all set to zero</li>
<li><code class="language-plaintext highlighter-rouge">5F5F..5F</code> (1025 times) ‚Äì execution aborts due to out of stack</li>
</ul>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security Considerations
</h2>
<p>The authors are not aware of any impact on security. Note that jumpdest-analysis is unaffected, as <code class="language-plaintext highlighter-rouge">PUSH0</code> has no immediate data bytes.</p>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/axic">Alex Beregszaszi</a>, <a href="https://github.com/hugo-dc">Hugo De la cruz</a>, <a href="https://github.com/chfast">Pawe≈Ç Bylica</a>, "EIP-3855: PUSH0 instruction [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 3855, February 2021. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-3855.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-3855: PUSH0 instruction [DRAFT]",
    "author": "Alex Beregszaszi (@axic), Hugo De la cruz (@hugo-dc), Pawe≈Ç Bylica (@chfast)",
    "name": "EIP-3855: PUSH0 instruction [DRAFT]",
    "dateCreated": "2021-02-19",
    "datePublished": "2021-02-19",

    "discussionUrl": "https://ethereum-magicians.org/t/eip-3855-push0-instruction/7014",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2021"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
