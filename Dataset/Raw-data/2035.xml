<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-2035: Stateless Clients - Repricing SLOAD and SSTORE to pay for block proofs</title>
<meta property="og:title" content="EIP-2035: Stateless Clients - Repricing SLOAD and SSTORE to pay for block proofs" />
<meta name="description" content="" />
<meta property="og:description" content="" />
<meta name="twitter:description" content="" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-2035" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-2035" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="stagnant">
ðŸš§ This EIP had no activity for at least 6 months.
</div>
<div class="home">
<h1 class="page-heading">
EIP-2035: Stateless Clients - Repricing SLOAD and SSTORE to pay for block proofs
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2035.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3></h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/AlexeyAkhunov">Alexey Akhunov</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/eip-2035-stateless-clients-repricing-sload-and-sstore-to-pay-for-block-proofs/3284">https://ethereum-magicians.org/t/eip-2035-stateless-clients-repricing-sload-and-sstore-to-pay-for-block-proofs/3284</a></td></tr>
<tr><th>Status</th><td>Stagnant
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>Core</td></tr>
<tr><th>Created</th><td>2019-05-16</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#simple-summary">Simple Summary</a></li>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a></li>
<li><a href="#rationale">Rationale</a></li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#implementation">Implementation</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="simple-summary">
<a href="#simple-summary" class="anchor-link"></a> Simple Summary
</h2>
<p>The gas cost of EVM opcodes <code class="language-plaintext highlighter-rouge">SLOAD</code> and <code class="language-plaintext highlighter-rouge">SSTORE</code> increases in order to accommodate extra bandwidth required to propagate block proof together with the block
headers and block bodies, as explained <a href="https://medium.com/@akhounov/data-from-the-ethereum-stateless-prototype-8c69479c8abc">here</a>.</p>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>It is part of the State Rent roadmap. This particular change prepares Ethereum for introduction of the block proofs (current understanding is that they
can be introuced without a hard fork). The introduction of the block proofs allows any Ethereum node that wishes to receive them, to process transactions
in the blocks without needing to access the Ethereum state. All necessary information for the execution (and the proof of validity) is continued in the
block proofs. In most Ethereum nodes, it will speed up the block processing and reduce the memory footprint of such processing. For mining nodes, however,
there will be more work to do to construct and transmit the block proofs. Therefore, the extra charge (payable to the miners) is introduced. In the first
phase, only contract storage will be covered by the block proofs. It means that the Ethereum nodes will still need access to the accounts in the state,
but block proofs will make it optional to have access to contract storage for executing transactions. Therefore, only <code class="language-plaintext highlighter-rouge">SSTORE</code> and <code class="language-plaintext highlighter-rouge">SLOAD</code> opcodes are
affected.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>There is <a href="https://github.com/holiman/vmstats/blob/master/README.md">empirical analysis</a> showing that <code class="language-plaintext highlighter-rouge">SLOAD</code> opcode is currently underpriced in terms
of execution latency it adds to the block processing. The hypothesis is that it is due to the latency of the database accesses. In the same
analysis, <code class="language-plaintext highlighter-rouge">SSTORE</code> is not considered, because its effect on the database accesses can be (and are in many implementations) delayed until the end of
the block. Stateless clients approach to the contract storage will largely negate that latency because no database accesses will be required.
Instead, bandwidth consumption goes up. There is emprical analysis (unpublished, but will be) suggesting that 1 uncached <code class="language-plaintext highlighter-rouge">SSTORE</code> or <code class="language-plaintext highlighter-rouge">SLOAD</code> adds
at most 1 kB to the block proofs. At the current cost of data transmission (68 gas per byte), this translates to the increase of gas cost of both
operations by 69k gas. However, in light of proposal in <a href="/EIPS/eip-2028">EIP-2028</a>, the increase can be made much smaller.</p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<p>Not very formal at the moment, but will be formalised with more research and prototyping. Gas of operations <code class="language-plaintext highlighter-rouge">SLOAD</code> and <code class="language-plaintext highlighter-rouge">SSTORE</code> increases by <code class="language-plaintext highlighter-rouge">X</code> gas when the storage slots accessed (read by <code class="language-plaintext highlighter-rouge">SLOAD</code> or written by <code class="language-plaintext highlighter-rouge">SSTORE</code>) were not previously accessed (by another <code class="language-plaintext highlighter-rouge">SLOAD</code> or <code class="language-plaintext highlighter-rouge">SSTORE</code>) during the same transaction.</p>
<p>Future variant (will be possible after the implementation of the <em>Gross contract size acccounting</em>) is researched, where the increase is varied
depending on the size of the contract storage, i.e. <code class="language-plaintext highlighter-rouge">SLOAD</code> and <code class="language-plaintext highlighter-rouge">SSTORE</code> for smaller contracts will be cheaper.</p>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<p><a href="/EIPS/eip-1884">EIP-1884</a> seeks to increase the gas cost of <code class="language-plaintext highlighter-rouge">SLOAD</code> but using a different justification
(latency of the execution as described in the Motivation). This EIP is likely to increase the cost of <code class="language-plaintext highlighter-rouge">SLOAD</code> by a larger amount, therefore partially
(because EIP-1884 also proposed other increases) supersedes EIP-1884.</p>
<p><a href="/EIPS/eip-2028">EIP-2028</a> describes the model that can be used for deciding the gas cost of data transmission. It is relevant
because in the stateless client regime <code class="language-plaintext highlighter-rouge">SSTORE</code> and <code class="language-plaintext highlighter-rouge">SLOAD</code> operations add more data to be transmitted (as well as computation to verify the proofs).</p>
<p>The main alternate design is the rent proportional to the size of the contract storage, which unfortunately introduces a serious griefing
vulnerability problem, and so far the solution seems to be in redesigning and rewriting smart contracts in a way, which makes them not vulnerable.
However, this approach is likely to be very expensive on the non-technical (ecosystem) level.</p>
<h2 id="backwards-compatibility">
<a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>This change is not backwards compatible and requires hard fork to be activated.
There might also be an adverse effect of this change on the already deployed contract. It is expected that after this EIP and
<a href="/EIPS/eip-2026">EIP-2026</a> (rent prepayment for accounts), the recommendation will be made to raise the gas limit. This can somewhat dampen the
adverse effect of EIP. The most problematic cases would be with the contracts that assume certain gas costs of <code class="language-plaintext highlighter-rouge">SLOAD</code>
and <code class="language-plaintext highlighter-rouge">SSTORE</code> and hard-code them in their internal gas computations. For others, the cost of interacting with the contract
storage will rise and may make some dApps based on such interactions, non-viable. This is a trade off to avoid even bigger
adverse effect of the rent proportional to the contract storage size. However, more research is needed to more fully
analyse the potentially impacted contracts.</p>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<p>Tests cases will be generated out of a reference implementation.</p>
<h2 id="implementation">

<a href="#implementation" class="anchor-link"></a> Implementation
</h2>
<p>There will be proof of concept implementation to refine and clarify the specification.</p>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/AlexeyAkhunov">Alexey Akhunov</a>, "EIP-2035: Stateless Clients - Repricing SLOAD and SSTORE to pay for block proofs [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 2035, May 2019. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-2035.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-2035: Stateless Clients - Repricing SLOAD and SSTORE to pay for block proofs [DRAFT]",
    "author": "Alexey Akhunov (@AlexeyAkhunov)",
    "name": "EIP-2035: Stateless Clients - Repricing SLOAD and SSTORE to pay for block proofs [DRAFT]",
    "dateCreated": "2019-05-16",
    "datePublished": "2019-05-16",

    "discussionUrl": "https://ethereum-magicians.org/t/eip-2035-stateless-clients-repricing-sload-and-sstore-to-pay-for-block-proofs/3284",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2019"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
