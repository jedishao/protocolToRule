<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-3416: Median Gas Premium</title>
<meta property="og:title" content="EIP-3416: Median Gas Premium" />
<meta name="description" content="" />
<meta property="og:description" content="" />
<meta name="twitter:description" content="" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-3416" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-3416" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="stagnant">
üöß This EIP had no activity for at least 6 months.
</div>
<div class="home">
<h1 class="page-heading">
EIP-3416: Median Gas Premium
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3416.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3></h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/hexzorro">HexZorro</a>, <a href="https://github.com/mtefagh">Mojtaba Tefagh</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/eip-3416-median-gas-premium/5755">https://ethereum-magicians.org/t/eip-3416-median-gas-premium/5755</a></td></tr>
<tr><th>Status</th><td>Stagnant
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>

<tr><th>Category</th><td>Core</td></tr>
<tr><th>Created</th><td>2021-03-18</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#simple-summary">Simple Summary</a></li>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a>
<ul>
<li><a href="#definitions">Definitions</a></li>
<li><a href="#process">Process</a></li>
</ul>
</li>
<li><a href="#rationale">Rationale</a></li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="simple-summary">
<a href="#simple-summary" class="anchor-link"></a> Simple Summary
</h2>
<p>A transaction pricing mechanism with a fixed-per-block network fee and a median inclusion fee with additive updates.</p>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>There is a base fee per gas in protocol, which can move up or down by a maximum of 1/8 in each block. The base fee per gas is adjusted by the protocol to target an average gas usage per block instead of an absolute gas usage per block. The base fee is increased when blocks are over the gas limit target and decreases when blocks are under the gas limit target. Transaction senders specify their fees by providing <em>only one value</em>:</p>
<ul>
<li>The fee cap which represents the maximum total (base fee + gas premium) that the transaction sender would be willing to pay to get their transaction included, resembles the current maximum gas price specified by senders but in this protocol change proposal the final gas price paid, most of the time, will be lower than the proposed by the transaction sender.</li>
</ul>
<p>Then there is a gas premium that is directly computed as 50% of (fee cap - base fee). This gas premium gets added onto the base fee to calculate the gas price that will be used in the weighted median computation. The gas premium, determined directly by a specified fee cap, can either be set to a fairly low value to compensate miners for uncle rate risk only with the base fee, or to a high value to compete during sudden bursts of activity. Using all transactions that the miner wants to include in the block, a <strong>weighted median gas premium</strong> is computed, not considering in the computation 5% of gas price outliers on the upper-side for extra robustness against miner manipulation.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>We target the following goals:</p>
<ul>
<li>Gas prices spikes are mathematically smoothed out. EIP1559 does not seems to really tackle gas premium volatility and UX.</li>
<li>Maintain gas price preference, i.e. transaction senders willing to pay extra in fees will be rewarded with early preferential inclusion in the blocks, because the miners want to maximize their profits and include transactions with higher fee caps first to maximize the median.</li>
<li>Final gas price paid by the sender is, most of the time, smaller than the maximum gas price specified by sender.</li>
<li>Gas pricing is more robust to sender manipulation or miner manipulation.</li>
</ul>
<p>Ethereum currently prices transaction fees using a simple auction mechanism, where users send transactions with bids (‚Äúgasprices‚Äù) and miners choose transactions with the highest bids, and transactions that get included pay the bid that they specify. This leads to several large sources of inefficiency:</p>
<ul>
<li><strong>Current extreme volatility of gas prices is hurting user experience</strong>: if you observe online gas price metrics, the current trends in recommended gas prices can change substantially by the minute, making the user experience in the network very awkward. Also, gas volatility makes the mining business more unpredictable and costly, because miners need to spend money hedging the risks.</li>
<li><strong>Mismatch between volatility of transaction fee levels and social cost of transactions</strong>: bids to include transactions on mature public blockchains, that have enough usage so that blocks are full, tend to be extremely volatile. On Ethereum, minimum bids range between 1 nanoeth (10^9 nanoeth = 1 ETH), but sometimes go over 100 nanoeth and have reached over 200 nanoeth. This clearly creates many inefficiencies, because it‚Äôs absurd to suggest that the cost incurred by the network from accepting one more transaction into a block actually is 200x more when gas prices are 200 nanoeth than when they are 1 nanoeth; in both cases, it‚Äôs a difference between 8 million gas and 8.02 million gas.</li>
<li><strong>Needless delays for users</strong>: because of the hard per-block gas limit coupled with natural volatility in transaction volume, transactions often wait for several blocks before getting included, but this is socially unproductive; no one significantly gains from the fact that there is no ‚Äúslack‚Äù mechanism that allows one block to be bigger and the next block to be smaller to meet block-by-block differences in demand.</li>
<li><strong>Inefficiencies of first price auctions</strong>: The current approach, where transaction senders publish a transaction with a bid a maximum fee, miners choose the highest-paying transactions, and everyone pays what they bid. This is well-known in mechanism design literature to be highly inefficient, and so complex fee estimation algorithms are required. But even these algorithms often end up not working very well, leading to frequent fee overpayment. We need a more stable fee metric that is computed inside the protocol.</li>
</ul>
<p>The proposal in this EIP is to start with a base fee amount which is adjusted up and down by the protocol based on how congested the network is. When the network exceeds the target per-block gas usage, the base fee increases slightly and when capacity is below the target, it decreases slightly. Because these base fee changes are constrained, the maximum difference in base fee from block to block is predictable. This then allows wallets to auto-set the gas fees for users in a highly reliable fashion. It is expected that most users will not have to manually adjust gas fees, even in periods of high network activity. For most users the base fee will be estimated by their wallet and a small gas premium related to the urgency and the priority they want to instill into the transaction.</p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<h3 id="definitions">
<a href="#definitions" class="anchor-link"></a> Definitions
</h3>
<p>This is a classic fork without a long migration time.</p>
<ul>
<li><code class="language-plaintext highlighter-rouge">FORK_BLOCK_NUMBER</code>: TBD. Block number at or after which EIP-3416 transactions are valid.</li>
<li><code class="language-plaintext highlighter-rouge">GAS_TARGET_MAX_CHANGE</code>: <code class="language-plaintext highlighter-rouge">1 // 1024</code>.</li>
<li><code class="language-plaintext highlighter-rouge">BLOCK_GAS_USED</code>: total gas consumed by transaction included in the block.</li>
<li><code class="language-plaintext highlighter-rouge">PARENT_GAS_USED</code>: same as <code class="language-plaintext highlighter-rouge">BLOCK_GAS_USED</code> for parent block.</li>
<li><code class="language-plaintext highlighter-rouge">CURRENT_BLOCK</code>: The current block that is being worked with (either being validated, or being produced).</li>
<li><code class="language-plaintext highlighter-rouge">BASE_FEE</code>: 16th item in the block header. Represents the amount of attoeth burned for every unit of gas a transaction uses.</li>
<li><code class="language-plaintext highlighter-rouge">PARENT_BASE_FEE</code>: same as <code class="language-plaintext highlighter-rouge">BASE_FEE</code> for parent block.</li>
<li><code class="language-plaintext highlighter-rouge">BASE_FEE_MAX_CHANGE</code>: <code class="language-plaintext highlighter-rouge">1 // 8</code></li>
<li><code class="language-plaintext highlighter-rouge">INITIAL_BASE_FEE</code> : Median gas price in <code class="language-plaintext highlighter-rouge">FORK_BLOCK_NUMBER - 1</code>.</li>
</ul>
<h3 id="process">
<a href="#process" class="anchor-link"></a> Process
</h3>
<ul>
<li>At <code class="language-plaintext highlighter-rouge">block.number == FORK_BLOCK_NUMBER</code> we set <code class="language-plaintext highlighter-rouge">BASE_FEE = INITIAL_BASE_FEE</code></li>
<li><code class="language-plaintext highlighter-rouge">BASE_FEE</code> is set, from <code class="language-plaintext highlighter-rouge">FORK_BLOCK_NUMBER + 1</code>, as follows
<ul>
<li>Let <code class="language-plaintext highlighter-rouge">GAS_DELTA = (PARENT_GAS_USED - PARENT_GAS_TARGET) // PARENT_GAS_TARGET</code> (possibly negative).</li>
<li>Set <code class="language-plaintext highlighter-rouge">BASE_FEE = PARENT_BASE_FEE + GSA_DELTA * BASE_FEE_MAX_CHANGE</code></li>
</ul>
</li>
<li>Transactions since <code class="language-plaintext highlighter-rouge">FORK_BLOCK_NUMBER</code> are encoded the same as the current ones <code class="language-plaintext highlighter-rouge">rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])</code> where <code class="language-plaintext highlighter-rouge">v,r,s</code> is a signature of <code class="language-plaintext highlighter-rouge">rlp([nonce, gasPrice, gasLimit, to, value, data])</code> and <code class="language-plaintext highlighter-rouge">gasPrice</code> is the <code class="language-plaintext highlighter-rouge">FEE_CAP</code> specified by the sender according to this proposal.</li>
<li>To produce transactions since <code class="language-plaintext highlighter-rouge">FORK_BLOCK_NUMBER</code>, the new <code class="language-plaintext highlighter-rouge">FEE_CAP</code> field (maintaining legacy name of <code class="language-plaintext highlighter-rouge">gasPrice</code> in the transaction) is set as follows (and the <code class="language-plaintext highlighter-rouge">GAS_PREMIUM</code> is computed as specified):
<ul>
<li><code class="language-plaintext highlighter-rouge">FEE_CAP</code>: <code class="language-plaintext highlighter-rouge">tx.gasPrice</code>, serves as the absolute maximum that the transaction sender is willing to pay.</li>
<li><code class="language-plaintext highlighter-rouge">GAS_PREMIUM = (FEE_CAP - BASE_FEE) / 2</code> serves as a sender-preferred median premium to the miner, beyond the base fee.</li>
<li>If <code class="language-plaintext highlighter-rouge">FEE_CAP &lt; BASE_FEE</code> then the transaction is considered invalid and cannot be included in the current block, but might be included in future blocks.</li>
</ul>
</li>
<li>During transaction execution, for EIP3416 transactions we calculate the cost to the <code class="language-plaintext highlighter-rouge">tx.origin</code> and the gain to the <code class="language-plaintext highlighter-rouge">block.coinbase</code> as follows:
<ul>
<li>Set <code class="language-plaintext highlighter-rouge">GASPRICE = BASE_FEE + median((tx_i.gasPrice - BASE_FEE) / 2)</code> among all transactions <code class="language-plaintext highlighter-rouge">tx_i</code> included in the same block, <em>weighted by gas consumed</em> and not including the top 5% of outlier gas price in calculation. By weighted median without 5% of the upper-side outliers, we mean that each gas unit spent is ordered according to the corresponding transaction by <code class="language-plaintext highlighter-rouge">BASE_FEE + tx.gasPrice / 2</code> and then the value chosen will be the one separating the lower 95% in two parts.</li>
<li>Let <code class="language-plaintext highlighter-rouge">GASUSED</code> be the gas used during the transaction execution/state transition.</li>
<li>The <code class="language-plaintext highlighter-rouge">tx.origin</code> initially pays <code class="language-plaintext highlighter-rouge">GASPRICE * tx.gasLimit</code>, and gets refunded <code class="language-plaintext highlighter-rouge">GASPRICE * (tx.gasLimit - GASUSED)</code>.</li>
</ul>
</li>
</ul>
<p>The miners can still use a <code class="language-plaintext highlighter-rouge">greedy</code> strategy to include new transactions in the proposed blocks by adding the transactions ordered by larger <code class="language-plaintext highlighter-rouge">FEE_CAP</code> first. This is similar to how current blocks are filled, and is a consequence of <code class="language-plaintext highlighter-rouge">FEE_CAP</code> and <code class="language-plaintext highlighter-rouge">GAS_PREMIUM</code> being a positive linear function of each other.</p>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<p>The rationale behind the premium being 50% of (fee cap - base fee) is that at any given point the average network sender has an average fee cap, and we assume that between base fee and fee cap the sender has no specific preference, as long as the transaction is included in some block. Then, the sender is happy with a median premium among this uniform range. Another justification can be that the user also knows that this new version of the pricing protocol for the complete block uses a median, then is fair for him to apply a median within his preferential range, assuming an uniform sampling there. Simulations (<a href="https://hackmd.io/c6kyRNMuTnKf_SlolmevRg#An-improvement-for-the-premium">here</a>) with Ethereum gas data shows indeed that median one of the most robust metric.s</p>
<p>The 5% top outliers removal, not considered in the median, or similar number, is to give extra robustness against miner manipulation, because as current network utilization has been around 97% for the last 6 months the miners can include their own transactions on the empty 3% to try to manipulate and increase the median price (even this manipulation effect will be very small on the final price).</p>
<p>The rationale for the <code class="language-plaintext highlighter-rouge">BASE_FEE</code> update formula is that we are using an additive version (<code class="language-plaintext highlighter-rouge">PARENT_BASE_FEE + GAS_DELTA * BASE_FEE_MAX_CHANGE</code>) to avoid an attack of senders sending this fee to zero. This attack was simulated and observed for multiplicative formula proposed in previous version (<code class="language-plaintext highlighter-rouge">PARENT_BASE_FEE + PARENT_BASE_FEE * GAS_DELTA * BASE_FEE_MAX_CHANGE</code>). See an article about the attack and the simulation <a href="https://mtefagh.github.io/fee/">here</a>.</p>
<p>Another rationale for the additive <code class="language-plaintext highlighter-rouge">BASE_FEE</code> update formula is that it guarantees (see <a href="https://pdfs.semanticscholar.org/3d2d/773983c5201b58586af463f045befae5bbf2.pdf">this</a> article) that the optimal execution strategy (scheduling broadcasts in order to pay less fee) for a batch of nonurgent transactions is to spread the transactions across different blocks which in turn helps to avoid network congestion and lowers volatility. For the multiplicative formula, it is exactly the reverse, that is, spikes (dumping all your transactions at once) are incentivized as described <a href="https://ethresear.ch/t/path-dependence-of-eip-1559-and-the-simulation-of-the-resulting-permanent-loss/8964">here</a>.</p>
<p>The rationale for the <code class="language-plaintext highlighter-rouge">BASE_FEE_MAX_CHANGE</code> being <code class="language-plaintext highlighter-rouge">1 // 8</code> is that the <code class="language-plaintext highlighter-rouge">BASE_FEE</code> is designed to be very adaptative to block utilization changes.</p>
<h2 id="backwards-compatibility">
 <a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>The backward compatibility is very straightforward because there are no new fields added to the transactions. Pricing of the gas per block on the miner/validator side is still fast to compute but a little more complex. Changes only affect miners/validators. Wallets are no affected by this proposal.</p>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<p>TBD.</p>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security Considerations
</h2>
<ul>
<li>Senders cannot manipulate the minimum fee because the minimum <code class="language-plaintext highlighter-rouge">BASE_FEE</code> is controlled by the miners with small increments or decrements on each new block proposed.</li>
<li>Above the <code class="language-plaintext highlighter-rouge">BASE_FEE</code> the senders have a very limited ability to manipulate and lower the final gas price they pay because they have to move the weighted median close to <code class="language-plaintext highlighter-rouge">BASE_FEE</code> and, as we know, this is a very robust statistic.</li>
<li>Miners have a very limited ability to manipulate and raise the final gas price paid by senders above <code class="language-plaintext highlighter-rouge">BASE_FEE</code> because to influence the final gas price they have to stuff fake transactions beyond the top 5% of the blocks. In average and currently, only the top 3% of the block is empty, so to fill-up 5% of the block they need to start dropping profitable transactions to reach 5%. Only beyond 5% of the top block gas they can start moving the median a little and the median is still a very robust statistic, not liable to being easily manipulated.</li>
</ul>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/hexzorro">HexZorro</a>, <a href="https://github.com/mtefagh">Mojtaba Tefagh</a>, "EIP-3416: Median Gas Premium [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 3416, March 2021. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-3416.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-3416: Median Gas Premium [DRAFT]",
    "author": "HexZorro (@hexzorro), Mojtaba Tefagh (@mtefagh)",
    "name": "EIP-3416: Median Gas Premium [DRAFT]",
    "dateCreated": "2021-03-18",
    "datePublished": "2021-03-18",

    "discussionUrl": "https://ethereum-magicians.org/t/eip-3416-median-gas-premium/5755",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2021"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
