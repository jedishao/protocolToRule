<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-1884: Repricing for trie-size-dependent opcodes</title>
<meta property="og:title" content="EIP-1884: Repricing for trie-size-dependent opcodes" />
<meta name="description" content="" />
<meta property="og:description" content="" />
<meta name="twitter:description" content="" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-1884" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-1884" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="home">
<h1 class="page-heading">
EIP-1884: Repricing for trie-size-dependent opcodes
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1884.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3></h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/holiman">Martin Holst Swende</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/opcode-repricing/3024">https://ethereum-magicians.org/t/opcode-repricing/3024</a></td></tr>
<tr><th>Status</th><td>Final
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>Core</td></tr>
<tr><th>Created</th><td>2019-03-28</td></tr>
<tr><th>Requires</th><td>
<a href="eip-150">150</a>,
<a href="eip-1052">1052</a>
</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#simple-summary">Simple Summary</a></li>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a></li>
<li><a href="#rationale">Rationale</a>
<ul>
<li><a href="#sload">SLOAD</a></li>
<li><a href="#balance">BALANCE</a></li>
<li><a href="#extcodehash">EXTCODEHASH</a></li>
</ul>
</li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#implementation">Implementation</a>
<ul>
<li><a href="#selfbalance">SELFBALANCE</a></li>
</ul>
</li>
<li><a href="#security-considerations">Security considerations</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="simple-summary">
<a href="#simple-summary" class="anchor-link"></a> Simple Summary
</h2>
<p>This EIP proposes repricing certain opcodes, to obtain a good balance between gas expenditure and resource consumption.</p>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>The growth of the Ethereum state has caused certain opcodes to be more resource-intensive at this point than
they were previously. This EIP proposes to raise the <code class="language-plaintext highlighter-rouge">gasCost</code> for those opcodes.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>An imbalance between the price of an operation and the resource consumption (CPU time, memory etc)
has several drawbacks:</p>
<ul>
<li>It could be used for attacks, by filling blocks with underpriced operations which causes excessive block processing time.</li>
<li>Underpriced opcodes cause a skewed block gas limit, where sometimes blocks finish quickly but other blocks with similar gas use finish slowly.</li>
</ul>
<p>If operations are well-balanced, we can maximise the block gaslimit and have a more stable processing time.</p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<p>At block <code class="language-plaintext highlighter-rouge">N</code>,</p>
<ul>
<li>The <code class="language-plaintext highlighter-rouge">SLOAD</code> (<code class="language-plaintext highlighter-rouge">0x54</code>) operation changes from <code class="language-plaintext highlighter-rouge">200</code> to <code class="language-plaintext highlighter-rouge">800</code> gas,</li>
<li>The <code class="language-plaintext highlighter-rouge">BALANCE</code> (<code class="language-plaintext highlighter-rouge">0x31</code>) operation changes from <code class="language-plaintext highlighter-rouge">400</code> to <code class="language-plaintext highlighter-rouge">700</code> gas,</li>
<li>The <code class="language-plaintext highlighter-rouge">EXTCODEHASH</code> (<code class="language-plaintext highlighter-rouge">0x3F</code>) operation changes from <code class="language-plaintext highlighter-rouge">400</code> to <code class="language-plaintext highlighter-rouge">700</code> gas,</li>
<li>A new opcode, <code class="language-plaintext highlighter-rouge">SELFBALANCE</code> is introduced at <code class="language-plaintext highlighter-rouge">0x47</code>.
<ul>
<li><code class="language-plaintext highlighter-rouge">SELFBALANCE</code> pops <code class="language-plaintext highlighter-rouge">0</code> arguments off the stack,</li>
<li><code class="language-plaintext highlighter-rouge">SELFBALANCE</code> pushes the <code class="language-plaintext highlighter-rouge">balance</code> of the current address to the stack,</li>
<li><code class="language-plaintext highlighter-rouge">SELFBALANCE</code> is priced as <code class="language-plaintext highlighter-rouge">GasFastStep</code>, at <code class="language-plaintext highlighter-rouge">5</code> gas.</li>
</ul>
</li>
</ul>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<p>Here are two charts, taken from a full sync using Geth. The execution time was measured for every opcode, and aggregated for 10K blocks. These bar charts show the top 25 ‘heavy’ opcodes in the ranges 5M to 6M and 6M to 7M:</p>
<p><img src="/assets/eip-1884/run3.total-bars-5.png" alt="bars1" />
<img src="/assets/eip-1884/run3.total-bars-6.png" alt="bars2" /></p>
<p>Note: It can also be seen that the <code class="language-plaintext highlighter-rouge">SLOAD</code> moves towards the top position. The <code class="language-plaintext highlighter-rouge">GASPRICE</code> (<code class="language-plaintext highlighter-rouge">0x3a</code>) opcode has position one which I believe can be optimized away within the client – which is not the case with <code class="language-plaintext highlighter-rouge">SLOAD</code>/<code class="language-plaintext highlighter-rouge">BALANCE</code>.</p>
<p>Here is another chart, showing a full sync with Geth. It represents the blocks <code class="language-plaintext highlighter-rouge">0</code> to <code class="language-plaintext highlighter-rouge">5.7M</code>, and highlights what the block processing time is spent on.</p>
<p><img src="/assets/eip-1884/geth_processing.png" alt="geth" /></p>
<p>It can be seen that <code class="language-plaintext highlighter-rouge">storage_reads</code> and <code class="language-plaintext highlighter-rouge">account_reads</code> are the two most significant factors contributing to the block processing time.</p>
<h3 id="sload">
<a href="#sload" class="anchor-link"></a> <code class="language-plaintext highlighter-rouge">SLOAD</code>
</h3>
<p><code class="language-plaintext highlighter-rouge">SLOAD</code> was repriced at <a href="/EIPS/eip-150">EIP-150</a>, from <code class="language-plaintext highlighter-rouge">50</code> to <code class="language-plaintext highlighter-rouge">200</code>.
The following graph shows a go-ethereum full sync, where each data point represents
10K blocks. During those 10K blocks, the execution time for the opcode was aggregated.</p>
<p><img src="/assets/eip-1884/SLOAD-run3.png" alt="graph" /></p>
<p>It can be seen that the repricing at <a href="/EIPS/eip-150">EIP-150</a> caused a steep drop, from around <code class="language-plaintext highlighter-rouge">67</code> to <code class="language-plaintext highlighter-rouge">23</code>.
Around block <code class="language-plaintext highlighter-rouge">5M</code>, it started reaching pre-<a href="/EIPS/eip-150">EIP-150</a> levels, and at block <code class="language-plaintext highlighter-rouge">7M</code>
it was averaging on around <code class="language-plaintext highlighter-rouge">150</code> - more than double pre-eip-150 levels.</p>
<p>Increasing the cost of <code class="language-plaintext highlighter-rouge">SLOAD</code> by <code class="language-plaintext highlighter-rouge">4</code> would bring it back down to around <code class="language-plaintext highlighter-rouge">40</code>.
It is to be expected that it will rise again in the future, and may need future repricing, unless
state clearing efforts are implemented before that happens.</p>
<h3 id="balance">
<a href="#balance" class="anchor-link"></a> <code class="language-plaintext highlighter-rouge">BALANCE</code>
</h3>
<p><code class="language-plaintext highlighter-rouge">BALANCE</code> (a.k.a <code class="language-plaintext highlighter-rouge">EXTBALANCE</code>) is an operation which fetches data from the state trie. It was repriced at <a href="/EIPS/eip-150">EIP-150</a> from <code class="language-plaintext highlighter-rouge">20</code> to <code class="language-plaintext highlighter-rouge">400</code>.</p>
<p><img src="/assets/eip-1884/BALANCE-run3.png" alt="graph" /></p>
<p>It is comparable to <code class="language-plaintext highlighter-rouge">EXTCODESIZE</code> and <code class="language-plaintext highlighter-rouge">EXTCODEHASH</code>, which are priced at <code class="language-plaintext highlighter-rouge">700</code> already.</p>
<p>It has a built-in high variance, since it is often used for checking the balance of <code class="language-plaintext highlighter-rouge">this</code>,
which is a inherently cheap operation, however, it can be used to lookup the balance of arbitrary account which often require trie (disk) access.</p>
<p>In hindsight, it might have been a better choice to have two
opcodes: <code class="language-plaintext highlighter-rouge">EXTBALANCE(address)</code> and <code class="language-plaintext highlighter-rouge">SELFBALANCE</code>, and have two different prices.</p>
<ul>
<li>This EIP proposes to extend the current opcode set.
<ul>
<li>Unfortunately, the opcode span <code class="language-plaintext highlighter-rouge">0x3X</code> is already full, hence the suggestion to place <code class="language-plaintext highlighter-rouge">SELFBALANCE</code> in the <code class="language-plaintext highlighter-rouge">0x4X</code> range.</li>
<li>As for why it is priced at <code class="language-plaintext highlighter-rouge">5</code> (<code class="language-plaintext highlighter-rouge">GasFastStep</code>) instead of <code class="language-plaintext highlighter-rouge">2</code> (<code class="language-plaintext highlighter-rouge">GasQuickStep</code>), like other similar operations: the EVM execution engine still needs a lookup into the (cached) trie, and <code class="language-plaintext highlighter-rouge">balance</code>, unlike <code class="language-plaintext highlighter-rouge">gasPrice</code> or <code class="language-plaintext highlighter-rouge">timeStamp</code>, is not constant during the execution, so it has a bit more inherent overhead.</li>
</ul>
</li>
</ul>
<h3 id="extcodehash">
<a href="#extcodehash" class="anchor-link"></a> <code class="language-plaintext highlighter-rouge">EXTCODEHASH</code>
</h3>
<p><code class="language-plaintext highlighter-rouge">EXTCODEHASH</code> was introduced in Constantinople, with <a href="/EIPS/eip-1052">EIP-1052</a>. It was priced at <code class="language-plaintext highlighter-rouge">400</code> with the reasoning:</p>
<blockquote>
<p>The gas cost is the same as the gas cost for the <code class="language-plaintext highlighter-rouge">BALANCE</code> opcode because the execution of the <code class="language-plaintext highlighter-rouge">EXTCODEHASH</code> requires the same account lookup as in <code class="language-plaintext highlighter-rouge">BALANCE</code>.</p>
</blockquote>
<p>Ergo, if we increase <code class="language-plaintext highlighter-rouge">BALANCE</code>, we should also increase <code class="language-plaintext highlighter-rouge">EXTCODEHASH</code></p>
<h2 id="backwards-compatibility">
<a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>The changes require a hardfork. The changes have the following consequences:</p>
<ul>
<li>Certain calls will become more expensive.</li>
<li>Default-functions which access the storage and may in some cases require more than<code class="language-plaintext highlighter-rouge">2300</code> gas (the minimum gas that is always available in calls).</li>
<li>Contracts that assume a certain fixed gas cost for calls (or internal sections) may cease to function.
<ul>
<li>A fixed gas cost is specified in <a href="/EIPS/eip-165">ERC-165</a> and implementations of this interface do use the affected opcodes.
<ul>
<li>The ERC-165 method <code class="language-plaintext highlighter-rouge">supportsInterface</code> must return a <code class="language-plaintext highlighter-rouge">bool</code> and use at most <code class="language-plaintext highlighter-rouge">30,000</code> gas.</li>
<li>The two example implementations from the EIP were, at the time of writing
<ol>
<li><code class="language-plaintext highlighter-rouge">586</code> gas for any input, and</li>
<li><code class="language-plaintext highlighter-rouge">236</code> gas, but increases linearly with a higher number of supported interfaces</li>
</ol>
</li>
</ul>
</li>
<li>It is unlikely that any ERC-165 <code class="language-plaintext highlighter-rouge">supportsInterface</code> implementation will go above <code class="language-plaintext highlighter-rouge">30.000</code> gas. That would require that the second variant is used, and thirty:ish interfaces are supported.</li>
<li>However, these operations have already been repriced earlier, so there is a historical precedent that ‘the gascost for these operations may change’, which should have prevented such fixed-gas-cost assumptions from being implemented.</li>
</ul>
</li>
</ul>
<p>I expect that certain patterns will be less used, for example the use of multiple modifiers which <code class="language-plaintext highlighter-rouge">SLOAD</code>s the same opcode will be merged into one. It may also lead to less <code class="language-plaintext highlighter-rouge">log</code> operations containing <code class="language-plaintext highlighter-rouge">SLOAD</code>ed values that are not strictly necessary.</p>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<p>Testcases that should be implemented:</p>
<ul>
<li>Test that <code class="language-plaintext highlighter-rouge">selfbalance == balance(address)</code>,</li>
<li>Test that <code class="language-plaintext highlighter-rouge">balance(this)</code> costs as before,</li>
<li>Test that <code class="language-plaintext highlighter-rouge">selfbalance</code> does not pop from stack</li>
<li>Gascost verification of <code class="language-plaintext highlighter-rouge">SLOAD</code>, <code class="language-plaintext highlighter-rouge">EXTCODEHASH</code> and <code class="language-plaintext highlighter-rouge">SELFBALANCE</code></li>
<li>Verify that <code class="language-plaintext highlighter-rouge">SELFBALANCE</code> is invalid before Istanbul</li>
</ul>
<p>Some testcases have been implemented as statetests at https://github.com/holiman/IstanbulTests/tree/master/GeneralStateTests</p>
<h2 id="implementation">
<a href="#implementation" class="anchor-link"></a> Implementation
</h2>
<p>This EIP has not yet been implemented in any client.
Both these opcodes have been repriced before, and the client internals for managing reprices are already in place.</p>
<h3 id="selfbalance">
<a href="#selfbalance" class="anchor-link"></a> <code class="language-plaintext highlighter-rouge">SELFBALANCE</code>
</h3>
<p>This is the implementation for the new opcode in go-ethereum:</p>
<div class="language-golang highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">func</span> <span class="n">opSelfBalance</span><span class="p">(</span><span class="n">pc</span> <span class="o">*</span><span class="kt">uint64</span><span class="p">,</span> <span class="n">interpreter</span> <span class="o">*</span><span class="n">EVMInterpreter</span><span class="p">,</span> <span class="n">contract</span> <span class="o">*</span><span class="n">Contract</span><span class="p">,</span> <span class="n">memory</span> <span class="o">*</span><span class="n">Memory</span><span class="p">,</span> <span class="n">stack</span> <span class="o">*</span><span class="n">Stack</span><span class="p">)</span> <span class="p">([]</span><span class="kt">byte</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
	<span class="n">stack</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">interpreter</span><span class="o">.</span><span class="n">intPool</span><span class="o">.</span><span class="n">get</span><span class="p">()</span><span class="o">.</span><span class="n">Set</span><span class="p">(</span><span class="n">interpreter</span><span class="o">.</span><span class="n">evm</span><span class="o">.</span><span class="n">StateDB</span><span class="o">.</span><span class="n">GetBalance</span><span class="p">(</span><span class="n">contract</span><span class="o">.</span><span class="n">Address</span><span class="p">())</span>
	<span class="k">return</span> <span class="no">nil</span><span class="p">,</span> <span class="no">nil</span>
<span class="p">}</span>

</code></pre></div></div>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security considerations
</h2>
<ul>
<li>See backwards compatibility section.</li>
<li>There are no special edgecases regarding <code class="language-plaintext highlighter-rouge">SELFBALANCE</code>, if we define it as <code class="language-plaintext highlighter-rouge">BALANCE</code> with <code class="language-plaintext highlighter-rouge">address</code> instead of popping an address from the stack – since <code class="language-plaintext highlighter-rouge">BALANCE</code> is already well-defined.</li>
<li>It should be investigated if Solidity contains any hardcoded expectations on the gas cost of these operations.</li>
<li>In many cases, a recipient of <code class="language-plaintext highlighter-rouge">ether</code> from a <code class="language-plaintext highlighter-rouge">CALL</code> will want to issue a <code class="language-plaintext highlighter-rouge">LOG</code>. The <code class="language-plaintext highlighter-rouge">LOG</code> operation costs <code class="language-plaintext highlighter-rouge">375</code> plus <code class="language-plaintext highlighter-rouge">375</code> per topic. If the <code class="language-plaintext highlighter-rouge">LOG</code> also wants to do an <code class="language-plaintext highlighter-rouge">SLOAD</code>, this change may make some such transfers fail.</li>
</ul>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/holiman">Martin Holst Swende</a>, "EIP-1884: Repricing for trie-size-dependent opcodes," <em>Ethereum Improvement Proposals</em>, no. 1884, March 2019. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-1884.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-1884: Repricing for trie-size-dependent opcodes",
    "author": "Martin Holst Swende (@holiman)",
    "name": "EIP-1884: Repricing for trie-size-dependent opcodes",
    "dateCreated": "2019-03-28",
    "datePublished": "2019-03-28",

    "discussionUrl": "https://ethereum-magicians.org/t/opcode-repricing/3024",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2019"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
