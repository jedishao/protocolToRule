<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-161: State trie clearing (invariant-preserving alternative)</title>
<meta property="og:title" content="EIP-161: State trie clearing (invariant-preserving alternative)" />
<meta name="description" content="" />
<meta property="og:description" content="" />
<meta name="twitter:description" content="" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-161" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-161" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="home">
<h1 class="page-heading">
EIP-161: State trie clearing (invariant-preserving alternative)
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3></h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/gavofyork">Gavin Wood</a></td></tr>
<tr><th>Status</th><td>Final
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>Core</td></tr>
<tr><th>Created</th><td>2016-10-24</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#hard-fork">Hard fork</a></li>
<li><a href="#parameters">Parameters</a></li>
<li><a href="#specification">Specification</a></li>
<li><a href="#rationale">Rationale</a></li>
<li><a href="#addendum-2017-08-15">Addendum (2017-08-15)</a></li>
<li><a href="#references">References</a></li>
</ul>
</div>
<h3 id="hard-fork">
<a href="#hard-fork" class="anchor-link"></a> Hard fork
</h3>
<p><a href="/EIPS/eip-607">Spurious Dragon</a></p>
<h3 id="parameters">
<a href="#parameters" class="anchor-link"></a> Parameters
</h3>
<ul>
<li><code class="language-plaintext highlighter-rouge">FORK_BLKNUM</code>: 2,675,000</li>
<li><code class="language-plaintext highlighter-rouge">CHAIN_ID</code>: 1 (Mainnet)</li>
</ul>
<h3 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h3>
<p>a. Account creation transactions and the <code class="language-plaintext highlighter-rouge">CREATE</code> operation SHALL, prior to the execution of the initialisation code, <strong>increment</strong> the <strong>nonce</strong> over and above its normal starting value by <strong>one</strong> (for normal networks, this will be simply 1, however test-nets with non-zero default starting nonces will be different).</p>
<p>b. Whereas <code class="language-plaintext highlighter-rouge">CALL</code> and <code class="language-plaintext highlighter-rouge">SUICIDE</code> would charge 25,000 gas when the destination is non-existent, now the charge SHALL <strong>only</strong> be levied if the operation transfers <strong>more than zero value</strong> and the destination account is <em>dead</em>.</p>
<p>c. No account may <em>change state</em> from non-existent to existent-but-_empty_. If an operation would do this, the account SHALL instead remain non-existent.</p>
<p>d. <em>At the end of the transaction</em>, any account <em>touched</em> by the execution of that transaction which is now <em>empty</em> SHALL instead become non-existent (i.e. <strong>deleted</strong>).</p>
<p>Where:</p>
<p>An account is considered to be <em>touched</em> when it is involved in any potentially <em>state-changing</em> operation. This includes, but is not limited to, being the recipient of a <strong>transfer of zero value</strong>.</p>
<p>An account is considered <em>empty</em> when it has <strong>no code</strong> and <strong>zero nonce</strong> and <strong>zero balance</strong>.</p>
<p>An account is considered <em>dead</em> when either it is non-existent or it is <em>empty</em>.</p>
<p><em>At the end of the transaction</em> is immediately following the execution of the suicide list, prior to the determination of the state trie root for receipt population.</p>
<p>An account <em>changes state</em> when:</p>
<ul>
<li>it is the target or refund of a <code class="language-plaintext highlighter-rouge">SUICIDE</code> operation for <strong>zero or more</strong> value;</li>
<li>it is the source or destination of a <code class="language-plaintext highlighter-rouge">CALL</code> operation or message-call transaction transferring <strong>zero or more</strong> value;</li>
<li>it is the source or creation of a <code class="language-plaintext highlighter-rouge">CREATE</code> operation or contract-creation transaction endowing <strong>zero or more</strong> value;</li>
<li>as the block author (“miner”) it is the recipient of block-rewards or transaction-fees of <strong>zero or more</strong> value.</li>
</ul>
<h4 id="notes">
<a href="#notes" class="anchor-link"></a> Notes
</h4>
<p>In the present Ethereum protocol, it should be noted that very few state changes can ultimately result in accounts that are empty following the execution of the transaction. In fact there are only four contexts that current implementations need track:</p>
<ul>
<li>an empty account has zero value transferred to it through <code class="language-plaintext highlighter-rouge">CALL</code>;</li>
<li>an empty account has zero value transferred to it through <code class="language-plaintext highlighter-rouge">SUICIDE</code>;</li>
<li>an empty account has zero value transferred to it through a message-call transaction;</li>
<li>an empty account has zero value transferred to it through a zero-gas-price fees transfer.</li>
</ul>
<h3 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h3>
<p>Same as #158 except that several edge cases are avoided since we do not break invariants:</p>
<ul>
<li><del>that an account can go from having code and storage to not having code or storage mid-way through the execution of a transaction;</del> [corrected]</li>
<li>that a newly created account cannot be deleted prior to being deployed.</li>
</ul>
<p><code class="language-plaintext highlighter-rouge">CREATE</code> avoids zero in the nonce to avoid any suggestion of the oddity of <code class="language-plaintext highlighter-rouge">CREATE</code>d accounts being reaped half-way through their creation.</p>
<h3 id="addendum-2017-08-15">
<a href="#addendum-2017-08-15" class="anchor-link"></a> Addendum (2017-08-15)
</h3>
<p>On 2016-11-24, a consensus bug occurred due to two implementations having different behavior in the case of state reverts.[3] The specification was amended to clarify that empty account deletions are reverted when the state is reverted.</p>
<h3 id="references">
<a href="#references" class="anchor-link"></a> References
</h3>
<ol>
<li>EIP-158 issue and discussion: https://github.com/ethereum/EIPs/issues/158</li>
<li>EIP-161 issue and discussion: https://github.com/ethereum/EIPs/issues/161</li>
<li>https://blog.ethereum.org/2016/11/25/security-alert-11242016-consensus-bug-geth-v1-4-19-v1-5-2/
<blockquote>
<p>Details: Geth was failing to revert empty account deletions when the transaction causing the deletions of empty accounts ended with an an out-of-gas exception. An additional issue was found in Parity, where the Parity client incorrectly failed to revert empty account deletions in a more limited set of contexts involving out-of-gas calls to precompiled contracts; the new Geth behavior matches Parity’s, and empty accounts will cease to be a source of concern in general in about one week once the state clearing process finishes.</p>
</blockquote>
</li>
</ol>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/gavofyork">Gavin Wood</a>, "EIP-161: State trie clearing (invariant-preserving alternative)," <em>Ethereum Improvement Proposals</em>, no. 161, October 2016. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-161.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-161: State trie clearing (invariant-preserving alternative)",
    "author": "Gavin Wood (@gavofyork)",
    "name": "EIP-161: State trie clearing (invariant-preserving alternative)",
    "dateCreated": "2016-10-24",
    "datePublished": "2016-10-24",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2016"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
