<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-2193: dType Alias Extension - Decentralized Type System</title>
<meta property="og:title" content="EIP-2193: dType Alias Extension - Decentralized Type System" />
<meta name="description" content="" />
<meta property="og:description" content="" />
<meta name="twitter:description" content="" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-2193" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-2193" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="stagnant">
ðŸš§ This EIP had no activity for at least 6 months.
</div>
<div class="home">
<h1 class="page-heading">
EIP-2193: dType Alias Extension - Decentralized Type System
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2193.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3></h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/loredanacirstea">Loredana Cirstea</a>, <a href="https://github.com/ctzurcanu">Christian Tzurcanu</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://github.com/ethereum/EIPs/issues/2192">https://github.com/ethereum/EIPs/issues/2192</a></td></tr>
<tr><th>Status</th><td>Stagnant

</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>ERC</td></tr>
<tr><th>Created</th><td>2019-07-16</td></tr>
<tr><th>Requires</th><td>
<a href="eip-155">155</a>,
<a href="eip-1900">1900</a>,
<a href="eip-2157">2157</a>
</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#simple-summary">Simple Summary</a></li>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a></li>
<li><a href="#rationale">Rationale</a></li>
<li><a href="#backwards-compatibility">Backwards Compatibility</a></li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#implementation">Implementation</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="simple-summary">
<a href="#simple-summary" class="anchor-link"></a> Simple Summary
</h2>
<p>We are proposing Aliasâ€Š-â€Ša semantic standard for identifying on-chain resources by human-readable qualifiers, supporting any type of data.</p>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>The dType Alias is a system for providing human-readable resource identifiers to on-chain content. A resource identifier is based on the type of data (identifier provided by dType, <a href="/EIPS/eip-1900">EIP-1900</a>) and the data content (identifier provided by a dType Storage Contract, <a href="/EIPS/eip-2157">EIP-2157</a>). It is a universal way of addressing content, supporting any type of data.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>There are standards that currently address the need for attaching human-readable identifiers to Ethereum accounts, such as <a href="/EIPS/eip-137">EIP-137</a>. These standards are an attempt to bring domain names to Ethereum, following the same format as DNS: <code class="language-plaintext highlighter-rouge">subdomain.domain.tld</code>. This leaf -&gt; root format is unintuitive and contradicts the semantic meaning that <code class="language-plaintext highlighter-rouge">.</code> has in programming languages, which is a root -&gt; leaf connection (e.g. in OOP, when accessing an objectâ€™s property). A more intuitive and widely used approach is a root-&gt;leaf format, used in file browsers, hierarchical menus, and even in other decentralized systems, which give unique identifiers to resources (e.g. <code class="language-plaintext highlighter-rouge">0x56.Currency.TCoin</code> in <a href="https://medium.com/r/?url=https%3A%2F%2Fdevelopers.libra.org">Libra</a>.</p>
<p>Moreover, <a href="/EIPS/eip-137">EIP-137</a> is not flexible enough to address smart contract content, which can contain heterogeneous data that belongs to various accounts. For example, a <code class="language-plaintext highlighter-rouge">PaymentChannel</code> smart contract can have an domain name. However, the <code class="language-plaintext highlighter-rouge">Alice-Bob</code> channel data from inside the smart contract, cannot have a subdomain name. Having uniquely identified, granular resources opens the way to creating both human and machine-readable protocols on top of Ethereum. It also provides a basis for protocols based on functional programming.</p>
<p>This ERC proposes a set of separators which maintain their semantic meaning and provides a way to address any type of resource - from Ethereum addresses, to individual <code class="language-plaintext highlighter-rouge">struct</code> instances inside smart contracts.</p>
<p>Imagine the following dType types: <code class="language-plaintext highlighter-rouge">SocialNetwork</code> and <code class="language-plaintext highlighter-rouge">Profile</code>, with related storage data about user profiles. One could access such a profile using an alias for the data content: <code class="language-plaintext highlighter-rouge"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="c4a5a8ada7a184b7aba7ada5a8aaa1b0b3abb6afeab4b6aba2ada8a1">[email&#160;protected]</a></code>. For a <code class="language-plaintext highlighter-rouge">PaymentChannel</code> type, Alice can refer to her channel with Bob with <code class="language-plaintext highlighter-rouge">alice-bob.paymentchannel</code>.
This alias system can be used off-chain, to replace the old DNS system with a deterministic and machine-readable way of displaying content, based on the dType typeâ€™s metadata.</p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<p>The dType registry will provide domain and subdomain names for the resource type. Subdomains can be attributed recursively, to dType types which contain other complex types in their composition.</p>
<p>We define an <code class="language-plaintext highlighter-rouge">Alias</code> registry contract, that keeps track of the human-readable identifiers for data resources, which exist in dType storage contracts.
Anyone can set an alias in the <code class="language-plaintext highlighter-rouge">Alias</code> registry, as long as the Ethereum address that signs the alias data has ownership on the resource, in the dType storage contract. Storage contract data ownership will be detailed in <a href="/EIPS/eip-2157">EIP-2157</a>. An owner can update or delete an alias at any time.</p>
<div class="language-solidity highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="n">Alias</span> <span class="p">{</span>

    <span class="k">event</span> <span class="n">AliasSet</span><span class="p">(</span><span class="kt">bytes32</span> <span class="n">dtypeIdentifier</span><span class="p">,</span> <span class="kt">bytes1</span> <span class="n">separator</span><span class="p">,</span> <span class="kt">string</span> <span class="n">name</span><span class="p">,</span> <span class="kt">bytes32</span> <span class="k">indexed</span> <span class="n">identifier</span><span class="p">);</span>

    <span class="k">function</span> <span class="n">setAlias</span><span class="p">(</span><span class="kt">bytes32</span> <span class="n">dtypeIdentifier</span><span class="p">,</span> <span class="kt">bytes1</span> <span class="n">separator</span><span class="p">,</span> <span class="kt">string</span> <span class="k">memory</span> <span class="n">name</span><span class="p">,</span> <span class="kt">bytes32</span> <span class="n">identifier</span><span class="p">,</span> <span class="kt">bytes</span> <span class="k">memory</span> <span class="n">signature</span><span class="p">)</span> <span class="k">external</span><span class="p">;</span>

    <span class="k">function</span> <span class="n">getAliased</span><span class="p">(</span><span class="kt">bytes1</span> <span class="n">separator</span><span class="p">,</span> <span class="kt">string</span> <span class="k">memory</span> <span class="n">name</span><span class="p">)</span> <span class="k">view</span> <span class="k">external</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bytes32</span> <span class="n">identifier</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<ul>
<li><code class="language-plaintext highlighter-rouge">dtypeIdentifier</code>: Type identifier from the dType registry, needed to ensure uniqueness of <code class="language-plaintext highlighter-rouge">name</code> for a dType type. <code class="language-plaintext highlighter-rouge">dtypeIdentifier</code> is checked to see if it exists in the dType registry. The dType registry also links the typeâ€™s data storage contract, where the existence and ownership of the <code class="language-plaintext highlighter-rouge">identifier</code> is checked.</li>
<li><code class="language-plaintext highlighter-rouge">name</code>: user-defined human-readable name for the resource referenced by <code class="language-plaintext highlighter-rouge">identifier</code></li>
<li><code class="language-plaintext highlighter-rouge">separator</code>: Character acting as a separator between the name and the rest of the alias. Allowed values:
<ul>
<li><code class="language-plaintext highlighter-rouge">.</code>: general domain separation, using root-&gt;leaf semantics. E.g. <code class="language-plaintext highlighter-rouge">domain.subdomain.leafsubdomain.resource</code></li>
<li><code class="language-plaintext highlighter-rouge">@</code>: identifying actor-related data, such as user profiles, using leaf-&gt;root semantics. E.g. <code class="language-plaintext highlighter-rouge"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="7514191c161035061a161c14191b1001021a071e5b05071a131c1910">[email&#160;protected]</a></code> or <code class="language-plaintext highlighter-rouge"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="3f5e53565c5a7f5b5e50">[email&#160;protected]</a>@eth</code></li>
<li><code class="language-plaintext highlighter-rouge">#</code>: identifying concepts, using root-&gt;leaf semantics. E.g. <code class="language-plaintext highlighter-rouge">topicX#postY</code></li>
<li><code class="language-plaintext highlighter-rouge">/</code>: general resource path definition, using root-&gt;leaf semantics. E.g. <code class="language-plaintext highlighter-rouge">resourceRoot/resource</code></li>
</ul>
</li>
<li><code class="language-plaintext highlighter-rouge">identifier</code>: Resource identifier from a smart contract linked with dType</li>
<li><code class="language-plaintext highlighter-rouge">signature</code>: Alias owner signature on <code class="language-plaintext highlighter-rouge">dtypeIdentifier</code>, <code class="language-plaintext highlighter-rouge">identifier</code>, <code class="language-plaintext highlighter-rouge">name</code>, <code class="language-plaintext highlighter-rouge">separator</code>, <code class="language-plaintext highlighter-rouge">nonce</code>, <code class="language-plaintext highlighter-rouge">aliasAddress</code>, <code class="language-plaintext highlighter-rouge">chainId</code>.
<ul>
<li><code class="language-plaintext highlighter-rouge">nonce</code>: monotonically increasing counter, used to prevent replay attacks</li>
<li><code class="language-plaintext highlighter-rouge">aliasAddress</code>: Ethereum address of <code class="language-plaintext highlighter-rouge">Alias</code> contract</li>
<li><code class="language-plaintext highlighter-rouge">chainId</code>: chain on which the <code class="language-plaintext highlighter-rouge">Alias</code> contract is deployed, as detailed in <a href="/EIPS/eip-155">EIP-155</a>, used to prevent replay attacks when updating the <code class="language-plaintext highlighter-rouge">identifier</code> for an alias.</li>
</ul>
</li>
</ul>
<p>Content addressability can be done:</p>
<ul>
<li>using the <code class="language-plaintext highlighter-rouge">bytes32</code> identifiers directly, e.g. <code class="language-plaintext highlighter-rouge">0x0<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="67055202505152525e5f555553535f015155535406510150510604505f51530205065f5e045f5657575f53535056050302025506515453555e045e550355025027">[email&#160;protected]</a>0x9dbb9abe0c47484c5707699b3ceea23b1c2cca2ac72681256ab42ae01bd347da</code></li>
<li>using the human identifiers, e.g. <code class="language-plaintext highlighter-rouge"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="2d4c41444e486d5e424e444c414348595a425f46">[email&#160;protected]</a></code></li>
</ul>
<p>Both of the above examples will resolve to the same content.</p>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<p>Current attempts to solve content addressability, such as <a href="/EIPS/eip-137">EIP-137</a>, only target Ethereum accounts. These are based on inherited concepts from HTTP and DNS, which are not machine friendly.</p>
<p>With <a href="/EIPS/eip-1900">EIP-1900</a> and <a href="/EIPS/eip-2157">EIP-2157</a>, general content addressability can be achieved. dType provides type information and a reference to the smart contract where the type instances are stored. Additionally, Alias uses the semantic meaning of subdomain separators to have a <a href="https://github.com/loredanacirstea/articles/blob/master/articles/Flexible_Alias_or_Why_ENS_is_Obsolete.md">intuitive order rule</a>.</p>
<p>Multiple aliases can be assigned to a single resource. Either by using a different <code class="language-plaintext highlighter-rouge">name</code> or by using a different <code class="language-plaintext highlighter-rouge">separator</code>. Each <code class="language-plaintext highlighter-rouge">separator</code> can have a specific standard for displaying and processing data, based on its semantic meaning.</p>
<h2 id="backwards-compatibility">
<a href="#backwards-compatibility" class="anchor-link"></a> Backwards Compatibility
</h2>
<p>Will be added.</p>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<p>Will be added.</p>
<h2 id="implementation">
<a href="#implementation" class="anchor-link"></a> Implementation
</h2>
<p>An in-work implementation can be found at https://github.com/pipeos-one/dType/blob/master/contracts/contracts/Alias.sol.
This proposal will be updated with an appropriate implementation when consensus is reached on the specifications.</p>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/loredanacirstea">Loredana Cirstea</a>, <a href="https://github.com/ctzurcanu">Christian Tzurcanu</a>, "EIP-2193: dType Alias Extension - Decentralized Type System [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 2193, July 2019. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-2193.</p>
</div>
<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-2193: dType Alias Extension - Decentralized Type System [DRAFT]",
    "author": "Loredana Cirstea (@loredanacirstea), Christian Tzurcanu (@ctzurcanu)",
    "name": "EIP-2193: dType Alias Extension - Decentralized Type System [DRAFT]",
    "dateCreated": "2019-07-16",
    "datePublished": "2019-07-16",

    "discussionUrl": "https://github.com/ethereum/EIPs/issues/2192",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2019"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
