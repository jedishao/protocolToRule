<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-4804: Web3 URL to EVM Call Message Translation</title>
<meta property="og:title" content="EIP-4804: Web3 URL to EVM Call Message Translation" />
<meta name="description" content="A translation of an HTTP-style Web3 URL to an EVM call message" />
<meta property="og:description" content="A translation of an HTTP-style Web3 URL to an EVM call message" />
<meta name="twitter:description" content="A translation of an HTTP-style Web3 URL to an EVM call message" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-4804" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-4804" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="review">
üìñ This EIP is in the review stage. It is subject to changes and feedback is appreciated.
</div>
<div class="home">
<h1 class="page-heading">
EIP-4804: Web3 URL to EVM Call Message Translation
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4804.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3>A translation of an HTTP-style Web3 URL to an EVM call message</h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/qizhou">Qi Zhou</a>, <a href="https://github.com/pichaoqkc">Chao Pi</a>, <a href="https://github.com/SamWilsn">Sam Wilson</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethereum-magicians.org/t/eip-4804-web3-url-to-evm-call-message-translation/8300">https://ethereum-magicians.org/t/eip-4804-web3-url-to-evm-call-message-translation/8300</a></td></tr>
<tr><th>Status</th><td>Review
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>ERC</td></tr>
<tr><th>Created</th><td>2022-02-14</td></tr>
<tr><th>Requires</th><td>
<a href="eip-681">681</a>
</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a></li>
<li><a href="#specification">Specification</a>
<ul>
<li><a href="#resolve-mode">Resolve Mode</a></li>
<li><a href="#examples">Examples</a></li>
</ul>
</li>
<li><a href="#rationale">Rationale</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>This standard translates an RFC 2396 URI like <code class="language-plaintext highlighter-rouge">web3://uniswap.eth/</code> or <code class="language-plaintext highlighter-rouge">ethereum-web3://uniswap.eth/</code> to an EVM message such as:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>EVMMessage {
   To: 0xaabbccddee.... // where uniswap.eth's address registered at ENS
   Calldata: 0x
   ...
}
</code></pre></div></div>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>Currently, reading data from Web3 generally relies on a translation done by a Web2 proxy to Web3 blockchain. The translation is mostly done by the proxies such as dApp websites/node service provider/etherscan, which are out of the control of users. The standard here aims to provide a simple way for Web2 users to directly access the content of Web3, especially on-chain Web contents such as SVG/HTML. Moreover, this standard enables interoperability with other standards already compatible with URIs, like SVG/HTML.</p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<p>This specification only defines read-only (i.e. Solidity‚Äôs <code class="language-plaintext highlighter-rouge">view</code> functions) semantics. State modifying functions may be defined as a future extension.</p>
<p>A Web3 URL is in the following form</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>web3URL = web3Schema [userinfo "@"] contractName [":" chainid] path ["?" query]
web3Schema = [ "ethereum-web3://" | "eth-web3://" | "web3://" ]
contractName = address | [name "." [ subDomain0 "." ... ]] nsProviderSuffix
path = ["/" method ["/" argument_0 ["/" argument_1 ... ]]]
argument = [type "!"] value
query = "attribute_1=value_1 [ "&amp;" attribute_2=value_2 ... ]
attribute = "returns" | "returnTypes" | other_attribute
</code></pre></div></div>
<p>where</p>
<ul>
<li><strong>web3Schema</strong> indicates the schema of the URL, which is ‚Äúeth[ereum]://web3-‚Äú or ‚Äúweb3://‚Äù for short.</li>
<li><strong>userinfo</strong> indicates which user is calling the EVM, i.e., ‚ÄúFrom‚Äù field in EVM call message. If not specified, the protocol will use 0x0 as the sender address.</li>
<li><strong>contractName</strong> indicates the contract to be called, i.e., ‚ÄúTo‚Äù field in the EVM call message. If the <strong>contractName</strong> is an <strong>address</strong>, i.e., 0x + 20-byte-data hex, then ‚ÄúTo‚Äù will be the address. Otherwise, the name is from a name service. In the second case, <strong>nsProviderSuffix</strong> will be the suffix from name service providers such as ‚Äúeth‚Äù, etc. The way to translate the name from a name service to an address will be discussed in later EIPs.</li>
<li><strong>chainid</strong> indicates which chain to resolve <strong>contractName</strong> and call the message. If not specified, the protocol will use the same chain as the name service provider, e.g., 1 for eth. If no name service provider is available, the default chainid is 1.</li>
<li><strong>query</strong> is an optional component containing a sequence of attribute-value pairs separated by ‚Äú&amp;‚Äù.</li>
</ul>
<h3 id="resolve-mode">
<a href="#resolve-mode" class="anchor-link"></a> Resolve Mode
</h3>
<p>Once the ‚ÄúTo‚Äù address and chainid are determined, the protocol will check the resolver mode of contract by calling ‚ÄúresolveMode‚Äù method. The protocol currently supports two resolve modes:</p>
<h4 id="manual-mode">
<a href="#manual-mode" class="anchor-link"></a> Manual Mode
</h4>
<p>The manual mode will not do any interpretation of <strong>path</strong> and <strong>query</strong>, and put <strong>path</strong> [ ‚Äú?‚Äù <strong>query</strong> ] as the calldata of the message directly.</p>
<h4 id="auto-mode">
<a href="#auto-mode" class="anchor-link"></a> Auto Mode
</h4>
<p>The auto mode is the default mode to resolve (also applies when the ‚ÄúresolveMode‚Äù method is unavailable in the target contract). In the auto mode, if <strong>path</strong> is empty, then the protocol will call the target contract with empty calldata. Otherwise, the calldata of the EVM message will use standard Solidity contract ABI, where</p>
<ul>
<li><strong>method</strong> is a string of function method be called</li>
<li><strong>argument_i</strong> is the ith argument of the method. If <strong>type</strong> is specified, the value will be translated to the corresponding type. The protocol currently supports the basic types such as uint256, bytes32, address, bytes, and string. If <strong>type</strong> is not specified, then the type will be automatically detected using the following rule in a sequential way:</li>
</ul>
<ol>
<li><strong>type</strong>=‚Äùuint256‚Äù, if <strong>value</strong> is numeric; or</li>
<li><strong>type</strong>=‚Äùbytes32‚Äù, if <strong>value</strong> is in the form of 0x+32-byte-data hex; or</li>
<li><strong>type</strong>=‚Äùaddress‚Äù, if <strong>value</strong> is in the form of 0x+20-byte-data hex; or</li>
<li><strong>type</strong>=‚Äùbytes‚Äù, if <strong>value</strong> is in the form of 0x followed by any number of bytes besides 20 or 32; or</li>
<li>else <strong>type</strong>=‚Äùaddress‚Äù and parse the argument as a domain name in the form of <code class="language-plaintext highlighter-rouge">[name "." [ subDomain0 "." ... ]] nsProviderSuffix</code>. In this case, the actual value of the argument will be obtained from <strong>nsProviderSuffix</strong>, e.g., eth. If <strong>nsProviderSuffix</strong> is not supported, an unsupported NS provider error will be returned.</li>
</ol>
<p>Note that if <strong>method</strong> does not exist, i.e., <strong>path</strong> is empty or ‚Äú/‚Äù, then the contract will be called with empty calldata.</p>
<ul>
<li><strong>returns</strong> attribute in <strong>query</strong> tells the format of the returned data. If not specified, the returned message data will be parsed in ‚Äú(bytes32)‚Äù and MIME will be set based on the suffix of the last argument. If <strong>returns</strong> is ‚Äú()‚Äù, the returned data will be parsed in raw bytes in JSON. Otherwise, the returned message will be parsed in the specified <strong>returns</strong> attribute in JSON. If multiple <strong>returns</strong> attributes are present, the value of the last <strong>returns</strong> attribute will be applied. Note that <strong>returnTypes</strong> is the alias of <strong>returns</strong>, but it is not recommended to use and is mainly for backward-compatible purpose.</li>
</ul>
<h3 id="examples">
<a href="#examples" class="anchor-link"></a> Examples
</h3>
<h4 id="example-1">
<a href="#example-1" class="anchor-link"></a> Example 1
</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>web3://enshomepage.eth/
</code></pre></div></div>
<p>The protocol will find the address of <strong>enshomepage.eth</strong> from ENS in chainid 1 (Mainnet), and then the protocol will call the address with ‚ÄúFrom‚Äù = ‚Äú0x‚Ä¶‚Äù and ‚ÄúCalldata‚Äù = ‚Äú0x‚Äù.</p>
<h4 id="example-2">
<a href="#example-2" class="anchor-link"></a> Example 2
</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>web3://cyberbrokers-meta.eth/renderBroker/9999
</code></pre></div></div>
<p>The protocol will find the address of <strong>cyberbrokers-meta.eth</strong> from ENS on chainid 1 (Mainnet), and then call the address with ‚ÄúTo‚Äù = ‚Äú0x‚Ä¶‚Äù and ‚ÄúCalldata‚Äù = ‚Äú0x‚Äù + <code class="language-plaintext highlighter-rouge">keccak("view(uint256)")[0:4] + abi.encode(uint256(9999))</code>.</p>
<h4 id="example-3">
<a href="#example-3" class="anchor-link"></a> Example 3
</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>web3://ensdomains.eth:4/
</code></pre></div></div>
<p>The protocol will find the address of <strong>ensdomains.eth</strong> from ENS on chainid 4 (Rinkeby), and then call the address with ‚ÄúFrom‚Äù = ‚Äú0x‚Ä¶‚Äù and ‚ÄúCalldata‚Äù = ‚Äú0x‚Äù with chainid = 4.</p>
<h4 id="example-4">
<a href="#example-4" class="anchor-link"></a> Example 4
</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>web3://0x9e081Df45E0D167636DB9C61C7ce719A58d82E3b:4
</code></pre></div></div>
<p>The protocol will call the address with ‚ÄúTo‚Äù = ‚Äú0x9e081Df45E0D167636DB9C61C7ce719A58d82E3b‚Äù and ‚ÄúCalldata‚Äù = ‚Äú0x‚Äù with chainid = 4.</p>
<h4 id="example-5">
<a href="#example-5" class="anchor-link"></a> Example 5
</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>web3://wusdt.eth:4/balanceOf/charles.eth?returns=(uint256)
</code></pre></div></div>
<p>The protocol will find the addresses of <strong>wusdt.eth</strong> and <strong>charles.eth</strong> and then call the method ‚ÄúbalanceOf(address)‚Äù of the contract with the <strong>charles.eth</strong>‚Äôs address. The returned data will be parsed as uint256 like <code class="language-plaintext highlighter-rouge">[ "10000000000000" ]</code>.</p>
<h4 id="example-6">
<a href="#example-6" class="anchor-link"></a> Example 6
</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>web3://wusdt.eth:4/balanceOf/charles.eth?returns=()
</code></pre></div></div>
<p>The protocol will find the address of <strong>wusdt.eth</strong> and then call the method ‚ÄúbalanceOf(address)‚Äù of the address. The returned data will be parsed as raw bytes like <code class="language-plaintext highlighter-rouge">["0x000000000000000000000000000000000000000000000000000009184e72a000"]</code>.</p>
<h2 id="rationale">
<a href="#rationale" class="anchor-link"></a> Rationale
</h2>
<p>The purpose of the proposal is to add a decentralized presentation layer for Ethereum. With the layer, we are able to render any web content (including HTML/CSS/JPG/PNG/SVG, etc) on-chain using human-readable URLs, and thus EVM can be served as decentralized Backend. The design of the standard is based on the following principles:</p>
<ul>
<li>
<p><strong>Human-readable</strong>. The Web3 URL should be easily recognized by human similar to Web2 URL (http://). As a result, we support names from name services to replace address for better readability. In addition, instead of using calldata in hex, we use human-readable method + arguments and translate them to calldata for better readability.</p>
</li>
<li>
<p><strong>Maximum-Compatible with HTTP-URL standard</strong>. The Web3 URL should be compatible with HTTP-URL standard including relative pathing, query, fragment, etc so that the support of existing HTTP-URL (e.g., by browser) can be easily extended to Web3 URL with minimal modification. This also means that existing Web2 users can easily migrate to Web3 with minimal extra knowledge of this standard.</p>
</li>
<li>
<p><strong>Simple</strong>. Instead of providing explicit types in arguments, we use a ‚Äúmaximum likelihood‚Äù principle of auto-detecting the types of the arguments such as address, bytes32, and uint256. This could greatly minimize the length of URL, while avoiding confusion. In addition, explicit types are also supported to clear the confusion if necessary.</p>
</li>
<li>
<p><strong>Flexible</strong>. The contract is able to override the encoding rule so that the contract has fine-control of understanding the actual Web resources that the users want to locate.</p>
</li>
</ul>
<h2 id="security-considerations">
<a href="#security-considerations" class="anchor-link"></a> Security Considerations
</h2>
<p>No security considerations were found.</p>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/qizhou">Qi Zhou</a>, <a href="https://github.com/pichaoqkc">Chao Pi</a>, <a href="https://github.com/SamWilsn">Sam Wilson</a>, "EIP-4804: Web3 URL to EVM Call Message Translation [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 4804, February 2022. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-4804.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-4804: Web3 URL to EVM Call Message Translation [DRAFT]",
    "author": "Qi Zhou (@qizhou), Chao Pi (@pichaoqkc), Sam Wilson (@SamWilsn)",
    "name": "EIP-4804: Web3 URL to EVM Call Message Translation [DRAFT]",
    "dateCreated": "2022-02-14",
    "datePublished": "2022-02-14",

    "discussionUrl": "https://ethereum-magicians.org/t/eip-4804-web3-url-to-evm-call-message-translation/8300",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2022"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
