<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EIP-1438: dApp Components (avatar) &amp; Universal Wallet</title>
<meta property="og:title" content="EIP-1438: dApp Components (avatar) &amp; Universal Wallet" />
<meta name="description" content="" />
<meta property="og:description" content="" />
<meta name="twitter:description" content="" />
<meta name="generator" content="Jekyll" />
<meta property="og:locale" content="en_US" />
<link rel="canonical" href="https://eips.ethereum.org/EIPS/eip-1438" />
<meta property="og:url" content="https://eips.ethereum.org/EIPS/eip-1438" />
<meta property="og:site_name" content="Ethereum Improvement Proposals" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@" />
<script type="application/ld+json">
    {
      "@type": "WebSite",
      "url": "https://eips.ethereum.org",
      "name": "Ethereum Improvement Proposals",
      "description": "Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.",
      "@context": "https://schema.org"
    }
  </script>
<link rel="stylesheet" href="/assets/css/style.css" /><link type="application/atom+xml" rel="alternate" href="https://eips.ethereum.org/feed.xml" title="Ethereum Improvement Proposals" /><script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-nlrDrBTHxJJlDDX22AS33xYI1OJHnGMDhiYMSe2U0e0=" crossorigin="anonymous"></script>
</head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/">Ethereum Improvement Proposals</a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger"><a class="page-link" href="/all">All</a><a class="page-link" href="/core">Core</a><a class="page-link" href="/networking">Networking</a><a class="page-link" href="/interface">Interface</a><a class="page-link" href="/erc">ERC</a><a class="page-link" href="/meta">Meta</a><a class="page-link" href="/informational">Informational</a></div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<div class="stagnant">
ðŸš§ This EIP had no activity for at least 6 months.
</div>
<div class="home">
<h1 class="page-heading">
EIP-1438: dApp Components (avatar) &amp; Universal Wallet
<a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1438.md"><svg role="img" aria-label="Source" xmlns="https://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><title>Source</title><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z" /></svg></a>
</h1>
<h3></h3>
<table>
<tr><th>Author</th><td><a href="https://github.com/Nitro888">Jet Lim</a></td></tr>
<tr><th>Discussions-To</th><td><a href="https://ethresear.ch/t/avatar-system-and-universal-wallet-for-ethereum-address/3473">https://ethresear.ch/t/avatar-system-and-universal-wallet-for-ethereum-address/3473</a></td></tr>
<tr><th>Status</th><td>Stagnant
</td></tr>
<tr><th>Type</th><td>Standards Track</td></tr>
<tr><th>Category</th><td>ERC</td></tr>
<tr><th>Created</th><td>2018-09-21</td></tr>
</table>
<div class="toc">
<h2>Table of Contents</h2>
<ul>
<li><a href="#simple-summary">Simple Summary</a></li>
<li><a href="#abstract">Abstract</a></li>
<li><a href="#motivation">Motivation</a>
<ul>
<li><a href="#seeds-for-improvement-of-the-blockchain-ecosystem">Seeds for improvement of the blockchain ecosystem.</a></li>
</ul>
</li>
<li><a href="#specification">Specification</a>
<ul>
<li><a href="#1-avatar">1. Avatar</a></li>
<li><a href="#2-universal-wallet">2. Universal Wallet</a></li>
</ul>
</li>
<li><a href="#test-cases">Test Cases</a></li>
<li><a href="#copyright">Copyright</a></li>
</ul>
</div>
<h2 id="simple-summary">
<a href="#simple-summary" class="anchor-link"></a> Simple Summary
</h2>
<p>Contracts are open source based. And most developers use the public contracts at the start of the project to modify or simply include them. This is project-oriented centralized development and I think it is a waste of resources. Therefore, we propose to make dApp or contracts component-ready for use in other services.</p>
<h2 id="abstract">
<a href="#abstract" class="anchor-link"></a> Abstract
</h2>
<p>There have been suggestions for modified tokens based on erc20, but since many tokens have already been built on erc20, it is necessary to increase the utilization of already developed erc20 tokens. Therefore, we propose a universal wallet that can use erc20 tokens universally. We also propose a component dApp that allows you to create and save your avatar (&amp; social badge system), and use it immediately in other services. All of the dApps suggested in this document are based on decentralized development and use that anyone can create and participate in.</p>
<h2 id="motivation">
<a href="#motivation" class="anchor-link"></a> Motivation
</h2>
<p>While many projects are under development in an open source way, they are simply adding and deploy with open sources to their projects. This means that you are developing a centralized service that uses your own dApp-generated information on your own. In order to improve the block chain ecosystem, all resources created by dApp and placed in the public block chain must be reusable in another dApp. This means that you can enhance your service by exchanging the generated information with other dApp. Likewise, ERC20 Tokens require Universal Wallet standards to be easy to use for direct transactions.</p>
<h3 id="seeds-for-improvement-of-the-blockchain-ecosystem">
<a href="#seeds-for-improvement-of-the-blockchain-ecosystem" class="anchor-link"></a> Seeds for improvement of the blockchain ecosystem.
</h3>
<ul>
<li>Synergy - With other dApps and resources.</li>
<li>Enhanced interface - For ERC20 tokens.</li>
<li>Easy &amp; Decentralized - Everyone should be able to add to their services easily, without censorship.</li>
</ul>
<h4 id="the-following-avatar-store-badge-system-and-universal-wallet-are-kind-of-examples-about-component-dapp">
<a href="#the-following-avatar-store-badge-system-and-universal-wallet-are-kind-of-examples-about-component-dapp" class="anchor-link"></a> The following avatar store, badge system, and universal wallet are kind of examples about component dApp.
</h4>
<p><img src="/assets/eip-1438/intro.png" alt="intro" /></p>
<h2 id="specification">
<a href="#specification" class="anchor-link"></a> Specification
</h2>
<h3 id="1-avatar">
<a href="#1-avatar" class="anchor-link"></a> 1. Avatar
</h3>
<h4 id="11-avatar-shop">
<a href="#11-avatar-shop" class="anchor-link"></a> 1.1. Avatar Shop
</h4>
<ul>
<li>The avatar store is created after ERC20 currency is set.</li>
<li>You can customize asset category &amp; viewer script.</li>
</ul>
<h4 id="12-upload-asset--user-data">
<a href="#12-upload-asset--user-data" class="anchor-link"></a> 1.2. Upload asset &amp; user data
</h4>
<p>The avatarâ€™s information &amp; assets are stored in the event log part of the block chain.</p>
<ul>
<li>Assets are SVG format. (compressed with gzip)</li>
<li>avatar information data is json (compressed with msgpack)</li>
</ul>
<p><img src="/assets/eip-1438/avatar.png" alt="avatar" />
** The avatar assets from <a href="https://github.com/fangpenlin/avataaars">Avataaars</a> developed by <a href="https://twitter.com/fangpenlin">Fang-Pen Lin</a>, the original avatar is designed by <a href="https://twitter.com/pablostanley">Pablo Stanley</a>.</p>
<h3 id="2-universal-wallet">
<a href="#2-universal-wallet" class="anchor-link"></a> 2. Universal Wallet
</h3>
<p><img src="/assets/eip-1438/wallet.png" alt="wallet" /></p>
<h4 id="21-erc20-interface">
<a href="#21-erc20-interface" class="anchor-link"></a> 2.1. ERC20 interface
</h4>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">contract</span> <span class="nx">ERC20Interface</span> <span class="p">{</span>
    <span class="kd">function</span> <span class="nx">totalSupply</span><span class="p">()</span> <span class="kr">public</span> <span class="nx">constant</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">uint</span><span class="p">);</span>
    <span class="kd">function</span> <span class="nx">balanceOf</span><span class="p">(</span><span class="nx">address</span> <span class="nx">tokenOwner</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">constant</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">uint</span> <span class="nx">balance</span><span class="p">);</span>
    <span class="kd">function</span> <span class="nx">allowance</span><span class="p">(</span><span class="nx">address</span> <span class="nx">tokenOwner</span><span class="p">,</span> <span class="nx">address</span> <span class="nx">spender</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">constant</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">uint</span> <span class="nx">remaining</span><span class="p">);</span>
    <span class="kd">function</span> <span class="nx">transfer</span><span class="p">(</span><span class="nx">address</span> <span class="nx">to</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">tokens</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">bool</span> <span class="nx">success</span><span class="p">);</span>
    <span class="kd">function</span> <span class="nx">approve</span><span class="p">(</span><span class="nx">address</span> <span class="nx">spender</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">tokens</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">bool</span> <span class="nx">success</span><span class="p">);</span>
    <span class="kd">function</span> <span class="nx">transferFrom</span><span class="p">(</span><span class="nx">address</span> <span class="k">from</span><span class="p">,</span> <span class="nx">address</span> <span class="nx">to</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">tokens</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">bool</span> <span class="nx">success</span><span class="p">);</span>

    <span class="nx">event</span> <span class="nx">Transfer</span><span class="p">(</span><span class="nx">address</span> <span class="nx">indexed</span> <span class="k">from</span><span class="p">,</span> <span class="nx">address</span> <span class="nx">indexed</span> <span class="nx">to</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">tokens</span><span class="p">);</span>
    <span class="nx">event</span> <span class="nx">Approval</span><span class="p">(</span><span class="nx">address</span> <span class="nx">indexed</span> <span class="nx">tokenOwner</span><span class="p">,</span> <span class="nx">address</span> <span class="nx">indexed</span> <span class="nx">spender</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">tokens</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<h4 id="22-fixed-erc20-contract-for-receive-approval-and-execute-function-in-one-call">
<a href="#22-fixed-erc20-contract-for-receive-approval-and-execute-function-in-one-call" class="anchor-link"></a> 2.2. Fixed ERC20 contract for receive approval and execute function in one call
</h4>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">approveAndCall</span><span class="p">(</span><span class="nx">address</span> <span class="nx">spender</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">tokens</span><span class="p">,</span> <span class="nx">bytes</span> <span class="nx">data</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">bool</span> <span class="nx">success</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">allowed</span><span class="p">[</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">][</span><span class="nx">spender</span><span class="p">]</span> <span class="o">=</span> <span class="nx">tokens</span><span class="p">;</span>
    <span class="nx">emit</span> <span class="nx">Approval</span><span class="p">(</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">,</span> <span class="nx">spender</span><span class="p">,</span> <span class="nx">tokens</span><span class="p">);</span>
    <span class="nx">ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">spender</span><span class="p">).</span><span class="nx">receiveApproval</span><span class="p">(</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">,</span> <span class="nx">tokens</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="nx">data</span><span class="p">);</span>
    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h4 id="23-and-approveandcallfallback-contract-for-fixed-erc20">
<a href="#23-and-approveandcallfallback-contract-for-fixed-erc20" class="anchor-link"></a> 2.3. And ApproveAndCallFallBack contract for Fixed ERC20.
</h4>
<p>However, many ERC20 tokens are not prepared.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">contract</span> <span class="nx">ApproveAndCallFallBack</span> <span class="p">{</span>
    <span class="kd">function</span> <span class="nx">receiveApproval</span><span class="p">(</span><span class="nx">address</span> <span class="k">from</span><span class="p">,</span> <span class="nx">uint256</span> <span class="nx">tokens</span><span class="p">,</span> <span class="nx">address</span> <span class="nx">token</span><span class="p">,</span> <span class="nx">bytes</span> <span class="nx">data</span><span class="p">)</span> <span class="kr">public</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h4 id="24-universal-wallet">
<a href="#24-universal-wallet" class="anchor-link"></a> 2.4. Universal Wallet
</h4>
<p>We propose a Universal Wallet to solve this problem.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">contract</span> <span class="nx">UniversalWallet</span> <span class="nx">is</span> <span class="nx">_Base</span> <span class="p">{</span>

    <span class="kd">constructor</span><span class="p">(</span><span class="nx">bytes</span> <span class="nx">_msgPack</span><span class="p">)</span> <span class="nx">_Base</span><span class="p">(</span><span class="nx">_msgPack</span><span class="p">)</span> <span class="kr">public</span> <span class="p">{}</span>
    <span class="kd">function</span> <span class="p">()</span> <span class="kr">public</span> <span class="nx">payable</span> <span class="p">{}</span>

    <span class="c1">//-------------------------------------------------------</span>
    <span class="c1">// erc20 interface</span>
    <span class="c1">//-------------------------------------------------------</span>
    <span class="kd">function</span> <span class="nx">balanceOf</span><span class="p">(</span><span class="nx">address</span> <span class="nx">_erc20</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">constant</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">uint</span> <span class="nx">balance</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">_erc20</span><span class="o">==</span><span class="nx">address</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
            <span class="k">return</span> <span class="nx">address</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">balance</span><span class="p">;</span>
        <span class="k">return</span> <span class="nx">_ERC20Interface</span><span class="p">(</span><span class="nx">_erc20</span><span class="p">).</span><span class="nx">balanceOf</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="kd">function</span> <span class="nx">transfer</span><span class="p">(</span><span class="nx">address</span> <span class="nx">_erc20</span><span class="p">,</span> <span class="nx">address</span> <span class="nx">_to</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">_tokens</span><span class="p">)</span> <span class="nx">onlyOwner</span> <span class="kr">public</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">bool</span> <span class="nx">success</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">require</span><span class="p">(</span><span class="nx">balanceOf</span><span class="p">(</span><span class="nx">_erc20</span><span class="p">)</span><span class="o">&gt;=</span><span class="nx">_tokens</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">_erc20</span><span class="o">==</span><span class="nx">address</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
            <span class="nx">_to</span><span class="p">.</span><span class="nx">transfer</span><span class="p">(</span><span class="nx">_tokens</span><span class="p">);</span>
        <span class="k">else</span>
            <span class="k">return</span> <span class="nx">_ERC20Interface</span><span class="p">(</span><span class="nx">_erc20</span><span class="p">).</span><span class="nx">transfer</span><span class="p">(</span><span class="nx">_to</span><span class="p">,</span><span class="nx">_tokens</span><span class="p">);</span>
        <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kd">function</span> <span class="nx">approve</span><span class="p">(</span><span class="nx">address</span> <span class="nx">_erc20</span><span class="p">,</span> <span class="nx">address</span> <span class="nx">_spender</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">_tokens</span><span class="p">)</span> <span class="nx">onlyOwner</span> <span class="kr">public</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">bool</span> <span class="nx">success</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">require</span><span class="p">(</span><span class="nx">_erc20</span> <span class="o">!=</span> <span class="nx">address</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
        <span class="k">return</span> <span class="nx">_ERC20Interface</span><span class="p">(</span><span class="nx">_erc20</span><span class="p">).</span><span class="nx">approve</span><span class="p">(</span><span class="nx">_spender</span><span class="p">,</span><span class="nx">_tokens</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">//-------------------------------------------------------</span>
    <span class="c1">// pay interface</span>
    <span class="c1">//-------------------------------------------------------</span>
    <span class="kd">function</span> <span class="nx">pay</span><span class="p">(</span><span class="nx">address</span> <span class="nx">_store</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">_tokens</span><span class="p">,</span> <span class="nx">uint256</span><span class="p">[]</span> <span class="nx">_options</span><span class="p">)</span> <span class="nx">onlyOwner</span> <span class="kr">public</span> <span class="p">{</span>
        <span class="nx">address</span> <span class="nx">erc20</span>   <span class="o">=</span> <span class="nx">_ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">_store</span><span class="p">).</span><span class="nx">erc20</span><span class="p">();</span>
        <span class="nx">address</span> <span class="nx">spender</span> <span class="o">=</span> <span class="nx">_ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">_store</span><span class="p">).</span><span class="nx">spender</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">erc20</span> <span class="o">==</span> <span class="nx">address</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span> <span class="p">{</span>
            <span class="nx">transfer</span><span class="p">(</span><span class="nx">erc20</span><span class="p">,</span><span class="nx">spender</span><span class="p">,</span><span class="nx">_tokens</span><span class="p">);</span>
            <span class="nx">_ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">_store</span><span class="p">).</span><span class="nx">receiveApproval</span><span class="p">(</span><span class="nx">_options</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="nx">_ERC20Interface</span><span class="p">(</span><span class="nx">erc20</span><span class="p">).</span><span class="nx">approve</span><span class="p">(</span><span class="nx">spender</span><span class="p">,</span><span class="nx">_tokens</span><span class="p">);</span>
            <span class="nx">_ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">_store</span><span class="p">).</span><span class="nx">receiveApproval</span><span class="p">(</span><span class="nx">_options</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="kd">function</span> <span class="nx">pay</span><span class="p">(</span><span class="nx">address</span> <span class="nx">_store</span><span class="p">,</span> <span class="nx">uint</span> <span class="nx">_tokens</span><span class="p">,</span> <span class="nx">bytes</span> <span class="nx">_msgPack</span><span class="p">)</span> <span class="nx">onlyOwner</span> <span class="kr">public</span> <span class="p">{</span>
        <span class="nx">address</span> <span class="nx">erc20</span>   <span class="o">=</span> <span class="nx">_ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">_store</span><span class="p">).</span><span class="nx">erc20</span><span class="p">();</span>
        <span class="nx">address</span> <span class="nx">spender</span> <span class="o">=</span> <span class="nx">_ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">_store</span><span class="p">).</span><span class="nx">spender</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">erc20</span> <span class="o">==</span> <span class="nx">address</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span> <span class="p">{</span>
            <span class="nx">transfer</span><span class="p">(</span><span class="nx">erc20</span><span class="p">,</span><span class="nx">spender</span><span class="p">,</span><span class="nx">_tokens</span><span class="p">);</span>
            <span class="nx">_ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">_store</span><span class="p">).</span><span class="nx">receiveApproval</span><span class="p">(</span><span class="nx">_msgPack</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="nx">_ERC20Interface</span><span class="p">(</span><span class="nx">erc20</span><span class="p">).</span><span class="nx">approve</span><span class="p">(</span><span class="nx">spender</span><span class="p">,</span><span class="nx">_tokens</span><span class="p">);</span>
            <span class="nx">_ApproveAndCallFallBack</span><span class="p">(</span><span class="nx">_store</span><span class="p">).</span><span class="nx">receiveApproval</span><span class="p">(</span><span class="nx">_msgPack</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="test-cases">
<a href="#test-cases" class="anchor-link"></a> Test Cases
</h2>
<ul>
<li>https://www.nitro888.com</li>
<li>https://github.com/Nitro888/nitro888.github.io</li>
<li>https://github.com/Nitro888/dApp-Alliance</li>
</ul>
<h2 id="copyright">
<a href="#copyright" class="anchor-link"></a> Copyright
</h2>
<p>Copyright and related rights waived via <a href="/LICENSE">CC0</a>.</p>
<h2>Citation</h2>
<p>Please cite this document as:</p>
<p><a href="https://github.com/Nitro888">Jet Lim</a>, "EIP-1438: dApp Components (avatar) &amp; Universal Wallet [DRAFT]," <em>Ethereum Improvement Proposals</em>, no. 1438, September 2018. [Online serial]. Available: https://eips.ethereum.org/EIPS/eip-1438.</p>
</div>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "TechArticle",
    "headline": "EIP-1438: dApp Components (avatar) &amp; Universal Wallet [DRAFT]",
    "author": "Jet Lim (@Nitro888)",
    "name": "EIP-1438: dApp Components (avatar) &amp; Universal Wallet [DRAFT]",
    "dateCreated": "2018-09-21",
    "datePublished": "2018-09-21",

    "discussionUrl": "https://ethresear.ch/t/avatar-system-and-universal-wallet-for-ethereum-address/3473",
    
    "inLanguage": "en-US",
    "license": "#copyright",
    "copyrightYear": "2018"
  }
</script>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">Ethereum Improvement Proposals</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">Ethereum Improvement Proposals</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/ethereum/EIPs"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">ethereum/EIPs</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, including core protocol specifications, client APIs, and contract standards.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
